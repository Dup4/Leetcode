{"slug":"array-of-doubled-pairs","id":991,"frontendId":954,"title":"Array of Doubled Pairs","categoryTitle":"Algorithms","difficulty":1,"starred":false,"locked":false,"likes":159,"dislikes":0,"status":2,"tag":[{"name":"Greedy","slug":"greedy","translatedName":"贪心"},{"name":"Array","slug":"array","translatedName":"数组"},{"name":"Hash Table","slug":"hash-table","translatedName":"哈希表"},{"name":"Sorting","slug":"sorting","translatedName":"排序"}],"totalAccepted":33801,"totalSubmission":87735,"hints":[],"sampleTestCase":"[3,1,3,6]","exampleTestcases":"[3,1,3,6]\n[2,1,2,6]\n[4,-2,2,-4]","content":"<p>Given an integer array of even length <code>arr</code>, return <code>true</code><em> if it is possible to reorder </em><code>arr</code><em> such that </em><code>arr[2 * i + 1] = 2 * arr[2 * i]</code><em> for every </em><code>0 &lt;= i &lt; len(arr) / 2</code><em>, or </em><code>false</code><em> otherwise</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [3,1,3,6]\n<strong>Output:</strong> false\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [2,1,2,6]\n<strong>Output:</strong> false\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [4,-2,2,-4]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> We can take two groups, [-2,-4] and [2,4] to form [-2,-4,2,4] or [2,4,-2,-4].\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= arr.length &lt;= 3 * 10<sup>4</sup></code></li>\n\t<li><code>arr.length</code> is even.</li>\n\t<li><code>-10<sup>5</sup> &lt;= arr[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n","translatedContent":"<p>给定一个长度为偶数的整数数组 <code>arr</code>，只有对 <code>arr</code> 进行重组后可以满足 “对于每个 <code>0 &lt;=&nbsp;i &lt; len(arr) / 2</code>，都有 <code>arr[2 * i + 1] = 2 * arr[2 * i]</code>”&nbsp;时，返回 <code>true</code>；否则，返回 <code>false</code>。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>arr = [3,1,3,6]\n<strong>输出：</strong>false\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>arr = [2,1,2,6]\n<strong>输出：</strong>false\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre>\n<strong>输入：</strong>arr = [4,-2,2,-4]\n<strong>输出：</strong>true\n<strong>解释：</strong>可以用 [-2,-4] 和 [2,4] 这两组组成 [-2,-4,2,4] 或是 [2,4,-2,-4]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= arr.length &lt;= 3 * 10<sup>4</sup></code></li>\n\t<li><code>arr.length</code> 是偶数</li>\n\t<li><code>-10<sup>5</sup> &lt;= arr[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n","translatedTitle":"二倍数对数组","codeSnippets":[{"lang":"C++","langSlug":"cpp","code":"class Solution {\npublic:\n    bool canReorderDoubled(vector<int>& arr) {\n\n    }\n};"},{"lang":"Java","langSlug":"java","code":"class Solution {\n    public boolean canReorderDoubled(int[] arr) {\n\n    }\n}"},{"lang":"Python","langSlug":"python","code":"class Solution(object):\n    def canReorderDoubled(self, arr):\n        \"\"\"\n        :type arr: List[int]\n        :rtype: bool\n        \"\"\""},{"lang":"Python3","langSlug":"python3","code":"class Solution:\n    def canReorderDoubled(self, arr: List[int]) -> bool:"},{"lang":"C","langSlug":"c","code":"\n\nbool canReorderDoubled(int* arr, int arrSize){\n\n}"},{"lang":"C#","langSlug":"csharp","code":"public class Solution {\n    public bool CanReorderDoubled(int[] arr) {\n\n    }\n}"},{"lang":"JavaScript","langSlug":"javascript","code":"/**\n * @param {number[]} arr\n * @return {boolean}\n */\nvar canReorderDoubled = function(arr) {\n\n};"},{"lang":"Ruby","langSlug":"ruby","code":"# @param {Integer[]} arr\n# @return {Boolean}\ndef can_reorder_doubled(arr)\n\nend"},{"lang":"Swift","langSlug":"swift","code":"class Solution {\n    func canReorderDoubled(_ arr: [Int]) -> Bool {\n\n    }\n}"},{"lang":"Go","langSlug":"golang","code":"func canReorderDoubled(arr []int) bool {\n\n}"},{"lang":"Scala","langSlug":"scala","code":"object Solution {\n    def canReorderDoubled(arr: Array[Int]): Boolean = {\n\n    }\n}"},{"lang":"Kotlin","langSlug":"kotlin","code":"class Solution {\n    fun canReorderDoubled(arr: IntArray): Boolean {\n\n    }\n}"},{"lang":"Rust","langSlug":"rust","code":"impl Solution {\n    pub fn can_reorder_doubled(arr: Vec<i32>) -> bool {\n\n    }\n}"},{"lang":"PHP","langSlug":"php","code":"class Solution {\n\n    /**\n     * @param Integer[] $arr\n     * @return Boolean\n     */\n    function canReorderDoubled($arr) {\n\n    }\n}"},{"lang":"TypeScript","langSlug":"typescript","code":"function canReorderDoubled(arr: number[]): boolean {\n\n};"},{"lang":"Racket","langSlug":"racket","code":"(define/contract (can-reorder-doubled arr)\n  (-> (listof exact-integer?) boolean?)\n\n  )"},{"lang":"Erlang","langSlug":"erlang","code":"-spec can_reorder_doubled(Arr :: [integer()]) -> boolean().\ncan_reorder_doubled(Arr) ->\n  ."},{"lang":"Elixir","langSlug":"elixir","code":"defmodule Solution do\n  @spec can_reorder_doubled(arr :: [integer]) :: boolean\n  def can_reorder_doubled(arr) do\n\n  end\nend"}]}