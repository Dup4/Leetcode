{"slug":"find-the-difference","id":389,"frontendId":389,"title":"Find the Difference","categoryTitle":"Algorithms","difficulty":0,"starred":false,"locked":false,"likes":308,"dislikes":0,"status":2,"tag":[{"name":"Bit Manipulation","slug":"bit-manipulation","translatedName":"位运算"},{"name":"Hash Table","slug":"hash-table","translatedName":"哈希表"},{"name":"String","slug":"string","translatedName":"字符串"},{"name":"Sorting","slug":"sorting","translatedName":"排序"}],"totalAccepted":118053,"totalSubmission":171778,"hints":[],"sampleTestCase":"\"abcd\"\n\"abcde\"","exampleTestcases":"\"abcd\"\n\"abcde\"\n\"\"\n\"y\"","content":"<p>You are given two strings <code>s</code> and <code>t</code>.</p>\n\n<p>String <code>t</code> is generated by random shuffling string <code>s</code> and then add one more letter at a random position.</p>\n\n<p>Return the letter that was added to <code>t</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;abcd&quot;, t = &quot;abcde&quot;\n<strong>Output:</strong> &quot;e&quot;\n<strong>Explanation:</strong> &#39;e&#39; is the letter that was added.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;&quot;, t = &quot;y&quot;\n<strong>Output:</strong> &quot;y&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= s.length &lt;= 1000</code></li>\n\t<li><code>t.length == s.length + 1</code></li>\n\t<li><code>s</code> and <code>t</code> consist of lowercase English letters.</li>\n</ul>\n","translatedContent":"<p>给定两个字符串 <code>s</code> 和 <code>t</code>&nbsp;，它们只包含小写字母。</p>\n\n<p>字符串 <code>t</code>&nbsp;由字符串 <code>s</code> 随机重排，然后在随机位置添加一个字母。</p>\n\n<p>请找出在 <code>t</code>&nbsp;中被添加的字母。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>s = \"abcd\", t = \"abcde\"\n<strong>输出：</strong>\"e\"\n<strong>解释：</strong>'e' 是那个被添加的字母。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>s = \"\", t = \"y\"\n<strong>输出：</strong>\"y\"\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= s.length &lt;= 1000</code></li>\n\t<li><code>t.length == s.length + 1</code></li>\n\t<li><code>s</code> 和 <code>t</code> 只包含小写字母</li>\n</ul>\n","translatedTitle":"找不同","codeSnippets":[{"lang":"C++","langSlug":"cpp","code":"class Solution {\npublic:\n    char findTheDifference(string s, string t) {\n\n    }\n};"},{"lang":"Java","langSlug":"java","code":"class Solution {\n    public char findTheDifference(String s, String t) {\n\n    }\n}"},{"lang":"Python","langSlug":"python","code":"class Solution(object):\n    def findTheDifference(self, s, t):\n        \"\"\"\n        :type s: str\n        :type t: str\n        :rtype: str\n        \"\"\""},{"lang":"Python3","langSlug":"python3","code":"class Solution:\n    def findTheDifference(self, s: str, t: str) -> str:"},{"lang":"C","langSlug":"c","code":"\n\nchar findTheDifference(char * s, char * t){\n\n}"},{"lang":"C#","langSlug":"csharp","code":"public class Solution {\n    public char FindTheDifference(string s, string t) {\n\n    }\n}"},{"lang":"JavaScript","langSlug":"javascript","code":"/**\n * @param {string} s\n * @param {string} t\n * @return {character}\n */\nvar findTheDifference = function(s, t) {\n\n};"},{"lang":"Ruby","langSlug":"ruby","code":"# @param {String} s\n# @param {String} t\n# @return {Character}\ndef find_the_difference(s, t)\n\nend"},{"lang":"Swift","langSlug":"swift","code":"class Solution {\n    func findTheDifference(_ s: String, _ t: String) -> Character {\n\n    }\n}"},{"lang":"Go","langSlug":"golang","code":"func findTheDifference(s string, t string) byte {\n\n}"},{"lang":"Scala","langSlug":"scala","code":"object Solution {\n    def findTheDifference(s: String, t: String): Char = {\n\n    }\n}"},{"lang":"Kotlin","langSlug":"kotlin","code":"class Solution {\n    fun findTheDifference(s: String, t: String): Char {\n\n    }\n}"},{"lang":"Rust","langSlug":"rust","code":"impl Solution {\n    pub fn find_the_difference(s: String, t: String) -> char {\n\n    }\n}"},{"lang":"PHP","langSlug":"php","code":"class Solution {\n\n    /**\n     * @param String $s\n     * @param String $t\n     * @return String\n     */\n    function findTheDifference($s, $t) {\n\n    }\n}"},{"lang":"TypeScript","langSlug":"typescript","code":"function findTheDifference(s: string, t: string): string {\n\n};"},{"lang":"Racket","langSlug":"racket","code":"(define/contract (find-the-difference s t)\n  (-> string? string? char?)\n\n  )"},{"lang":"Erlang","langSlug":"erlang","code":"-spec find_the_difference(S :: unicode:unicode_binary(), T :: unicode:unicode_binary()) -> char().\nfind_the_difference(S, T) ->\n  ."},{"lang":"Elixir","langSlug":"elixir","code":"defmodule Solution do\n  @spec find_the_difference(s :: String.t, t :: String.t) :: char\n  def find_the_difference(s, t) do\n\n  end\nend"}]}