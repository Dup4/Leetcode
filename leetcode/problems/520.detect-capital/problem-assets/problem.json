{"slug":"detect-capital","id":520,"frontendId":520,"title":"Detect Capital","categoryTitle":"Algorithms","difficulty":0,"starred":false,"locked":false,"likes":200,"dislikes":0,"status":2,"tag":[{"name":"String","slug":"string","translatedName":"字符串"}],"totalAccepted":72159,"totalSubmission":125612,"hints":[],"sampleTestCase":"\"USA\"","exampleTestcases":"\"USA\"\n\"FlaG\"","content":"<p>We define the usage of capitals in a word to be right when one of the following cases holds:</p>\n\n<ul>\n\t<li>All letters in this word are capitals, like <code>&quot;USA&quot;</code>.</li>\n\t<li>All letters in this word are not capitals, like <code>&quot;leetcode&quot;</code>.</li>\n\t<li>Only the first letter in this word is capital, like <code>&quot;Google&quot;</code>.</li>\n</ul>\n\n<p>Given a string <code>word</code>, return <code>true</code> if the usage of capitals in it is right.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> word = \"USA\"\n<strong>Output:</strong> true\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> word = \"FlaG\"\n<strong>Output:</strong> false\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= word.length &lt;= 100</code></li>\n\t<li><code>word</code> consists of lowercase and uppercase English letters.</li>\n</ul>\n","translatedContent":"<p>我们定义，在以下情况时，单词的大写用法是正确的：</p>\n\n<ul>\n\t<li>全部字母都是大写，比如 <code>\"USA\"</code> 。</li>\n\t<li>单词中所有字母都不是大写，比如 <code>\"leetcode\"</code> 。</li>\n\t<li>如果单词不只含有一个字母，只有首字母大写，&nbsp;比如&nbsp;<code>\"Google\"</code> 。</li>\n</ul>\n\n<p>给你一个字符串 <code>word</code> 。如果大写用法正确，返回 <code>true</code> ；否则，返回 <code>false</code> 。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>word = \"USA\"\n<strong>输出：</strong>true\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>word = \"FlaG\"\n<strong>输出：</strong>false\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= word.length &lt;= 100</code></li>\n\t<li><code>word</code> 由小写和大写英文字母组成</li>\n</ul>\n","translatedTitle":"检测大写字母","codeSnippets":[{"lang":"C++","langSlug":"cpp","code":"class Solution {\npublic:\n    bool detectCapitalUse(string word) {\n\n    }\n};"},{"lang":"Java","langSlug":"java","code":"class Solution {\n    public boolean detectCapitalUse(String word) {\n\n    }\n}"},{"lang":"Python","langSlug":"python","code":"class Solution(object):\n    def detectCapitalUse(self, word):\n        \"\"\"\n        :type word: str\n        :rtype: bool\n        \"\"\""},{"lang":"Python3","langSlug":"python3","code":"class Solution:\n    def detectCapitalUse(self, word: str) -> bool:"},{"lang":"C","langSlug":"c","code":"\n\nbool detectCapitalUse(char * word){\n\n}"},{"lang":"C#","langSlug":"csharp","code":"public class Solution {\n    public bool DetectCapitalUse(string word) {\n\n    }\n}"},{"lang":"JavaScript","langSlug":"javascript","code":"/**\n * @param {string} word\n * @return {boolean}\n */\nvar detectCapitalUse = function(word) {\n\n};"},{"lang":"Ruby","langSlug":"ruby","code":"# @param {String} word\n# @return {Boolean}\ndef detect_capital_use(word)\n\nend"},{"lang":"Swift","langSlug":"swift","code":"class Solution {\n    func detectCapitalUse(_ word: String) -> Bool {\n\n    }\n}"},{"lang":"Go","langSlug":"golang","code":"func detectCapitalUse(word string) bool {\n\n}"},{"lang":"Scala","langSlug":"scala","code":"object Solution {\n    def detectCapitalUse(word: String): Boolean = {\n\n    }\n}"},{"lang":"Kotlin","langSlug":"kotlin","code":"class Solution {\n    fun detectCapitalUse(word: String): Boolean {\n\n    }\n}"},{"lang":"Rust","langSlug":"rust","code":"impl Solution {\n    pub fn detect_capital_use(word: String) -> bool {\n\n    }\n}"},{"lang":"PHP","langSlug":"php","code":"class Solution {\n\n    /**\n     * @param String $word\n     * @return Boolean\n     */\n    function detectCapitalUse($word) {\n\n    }\n}"},{"lang":"TypeScript","langSlug":"typescript","code":"function detectCapitalUse(word: string): boolean {\n\n};"},{"lang":"Racket","langSlug":"racket","code":"(define/contract (detect-capital-use word)\n  (-> string? boolean?)\n\n  )"},{"lang":"Erlang","langSlug":"erlang","code":"-spec detect_capital_use(Word :: unicode:unicode_binary()) -> boolean().\ndetect_capital_use(Word) ->\n  ."},{"lang":"Elixir","langSlug":"elixir","code":"defmodule Solution do\n  @spec detect_capital_use(word :: String.t) :: boolean\n  def detect_capital_use(word) do\n\n  end\nend"}]}