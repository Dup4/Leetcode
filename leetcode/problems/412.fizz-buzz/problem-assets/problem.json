{"slug":"fizz-buzz","id":412,"frontendId":412,"title":"Fizz Buzz","categoryTitle":"Algorithms","difficulty":0,"starred":false,"locked":false,"likes":172,"dislikes":0,"status":2,"tag":[{"name":"Math","slug":"math","translatedName":"数学"},{"name":"String","slug":"string","translatedName":"字符串"},{"name":"Simulation","slug":"simulation","translatedName":"模拟"}],"totalAccepted":115273,"totalSubmission":161840,"hints":[],"sampleTestCase":"3","exampleTestcases":"3\n5\n15","content":"<p>Given an integer <code>n</code>, return <em>a string array </em><code>answer</code><em> (<strong>1-indexed</strong>) where</em>:</p>\n\n<ul>\n\t<li><code>answer[i] == &quot;FizzBuzz&quot;</code> if <code>i</code> is divisible by <code>3</code> and <code>5</code>.</li>\n\t<li><code>answer[i] == &quot;Fizz&quot;</code> if <code>i</code> is divisible by <code>3</code>.</li>\n\t<li><code>answer[i] == &quot;Buzz&quot;</code> if <code>i</code> is divisible by <code>5</code>.</li>\n\t<li><code>answer[i] == i</code> (as a string) if none of the above conditions are true.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> n = 3\n<strong>Output:</strong> [\"1\",\"2\",\"Fizz\"]\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> n = 5\n<strong>Output:</strong> [\"1\",\"2\",\"Fizz\",\"4\",\"Buzz\"]\n</pre><p><strong>Example 3:</strong></p>\n<pre><strong>Input:</strong> n = 15\n<strong>Output:</strong> [\"1\",\"2\",\"Fizz\",\"4\",\"Buzz\",\"Fizz\",\"7\",\"8\",\"Fizz\",\"Buzz\",\"11\",\"Fizz\",\"13\",\"14\",\"FizzBuzz\"]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 10<sup>4</sup></code></li>\n</ul>\n","translatedContent":"<p>给你一个整数 <code>n</code> ，找出从 <code>1</code> 到 <code>n</code> 各个整数的 Fizz Buzz 表示，并用字符串数组 <code>answer</code>（<strong>下标从 1 开始</strong>）返回结果，其中：</p>\n\n<ul>\n\t<li><code>answer[i] == \"FizzBuzz\"</code> 如果 <code>i</code> 同时是 <code>3</code> 和 <code>5</code> 的倍数。</li>\n\t<li><code>answer[i] == \"Fizz\"</code> 如果 <code>i</code> 是 <code>3</code> 的倍数。</li>\n\t<li><code>answer[i] == \"Buzz\"</code> 如果 <code>i</code> 是 <code>5</code> 的倍数。</li>\n\t<li><code>answer[i] == i</code> （以字符串形式）如果上述条件全不满足。</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>n = 3\n<strong>输出：</strong>[\"1\",\"2\",\"Fizz\"]\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>n = 5\n<strong>输出：</strong>[\"1\",\"2\",\"Fizz\",\"4\",\"Buzz\"]\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre>\n<strong>输入：</strong>n = 15\n<strong>输出：</strong>[\"1\",\"2\",\"Fizz\",\"4\",\"Buzz\",\"Fizz\",\"7\",\"8\",\"Fizz\",\"Buzz\",\"11\",\"Fizz\",\"13\",\"14\",\"FizzBuzz\"]</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 10<sup>4</sup></code></li>\n</ul>\n","translatedTitle":"Fizz Buzz","codeSnippets":[{"lang":"C++","langSlug":"cpp","code":"class Solution {\npublic:\n    vector<string> fizzBuzz(int n) {\n\n    }\n};"},{"lang":"Java","langSlug":"java","code":"class Solution {\n    public List<String> fizzBuzz(int n) {\n\n    }\n}"},{"lang":"Python","langSlug":"python","code":"class Solution(object):\n    def fizzBuzz(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: List[str]\n        \"\"\""},{"lang":"Python3","langSlug":"python3","code":"class Solution:\n    def fizzBuzz(self, n: int) -> List[str]:"},{"lang":"C","langSlug":"c","code":"\n\n/**\n * Note: The returned array must be malloced, assume caller calls free().\n */\nchar ** fizzBuzz(int n, int* returnSize){\n\n}"},{"lang":"C#","langSlug":"csharp","code":"public class Solution {\n    public IList<string> FizzBuzz(int n) {\n\n    }\n}"},{"lang":"JavaScript","langSlug":"javascript","code":"/**\n * @param {number} n\n * @return {string[]}\n */\nvar fizzBuzz = function(n) {\n\n};"},{"lang":"Ruby","langSlug":"ruby","code":"# @param {Integer} n\n# @return {String[]}\ndef fizz_buzz(n)\n\nend"},{"lang":"Swift","langSlug":"swift","code":"class Solution {\n    func fizzBuzz(_ n: Int) -> [String] {\n\n    }\n}"},{"lang":"Go","langSlug":"golang","code":"func fizzBuzz(n int) []string {\n\n}"},{"lang":"Scala","langSlug":"scala","code":"object Solution {\n    def fizzBuzz(n: Int): List[String] = {\n\n    }\n}"},{"lang":"Kotlin","langSlug":"kotlin","code":"class Solution {\n    fun fizzBuzz(n: Int): List<String> {\n\n    }\n}"},{"lang":"Rust","langSlug":"rust","code":"impl Solution {\n    pub fn fizz_buzz(n: i32) -> Vec<String> {\n\n    }\n}"},{"lang":"PHP","langSlug":"php","code":"class Solution {\n\n    /**\n     * @param Integer $n\n     * @return String[]\n     */\n    function fizzBuzz($n) {\n\n    }\n}"},{"lang":"TypeScript","langSlug":"typescript","code":"function fizzBuzz(n: number): string[] {\n\n};"},{"lang":"Racket","langSlug":"racket","code":"(define/contract (fizz-buzz n)\n  (-> exact-integer? (listof string?))\n\n  )"},{"lang":"Erlang","langSlug":"erlang","code":"-spec fizz_buzz(N :: integer()) -> [unicode:unicode_binary()].\nfizz_buzz(N) ->\n  ."},{"lang":"Elixir","langSlug":"elixir","code":"defmodule Solution do\n  @spec fizz_buzz(n :: integer) :: [String.t]\n  def fizz_buzz(n) do\n\n  end\nend"}]}