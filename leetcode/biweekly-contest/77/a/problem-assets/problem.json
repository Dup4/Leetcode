{"slug":"count-prefixes-of-a-given-string","id":2341,"frontendId":6051,"title":"Count Prefixes of a Given String","categoryTitle":"Algorithms","difficulty":0,"starred":false,"locked":false,"likes":1,"dislikes":0,"status":0,"tag":[],"totalAccepted":3173,"totalSubmission":3952,"hints":["For each string in words, check if it is a prefix of s. If true, increment the answer by 1."],"sampleTestCase":"[\"a\",\"b\",\"c\",\"ab\",\"bc\",\"abc\"]\n\"abc\"","exampleTestcases":"[\"a\",\"b\",\"c\",\"ab\",\"bc\",\"abc\"]\n\"abc\"\n[\"a\",\"a\"]\n\"aa\"","content":"<p>You are given a string array <code>words</code> and a string <code>s</code>, where <code>words[i]</code> and <code>s</code> comprise only of <strong>lowercase English letters</strong>.</p>\n\n<p>Return <em>the <strong>number of strings</strong> in</em> <code>words</code> <em>that are a <strong>prefix</strong> of</em> <code>s</code>.</p>\n\n<p>A <strong>prefix</strong> of a string is a substring that occurs at the beginning of the string. A <b>substring</b> is a contiguous sequence of characters within a string.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;ab&quot;,&quot;bc&quot;,&quot;abc&quot;], s = &quot;abc&quot;\n<strong>Output:</strong> 3\n<strong>Explanation:</strong>\nThe strings in words which are a prefix of s = &quot;abc&quot; are:\n&quot;a&quot;, &quot;ab&quot;, and &quot;abc&quot;.\nThus the number of strings in words which are a prefix of s is 3.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;a&quot;,&quot;a&quot;], s = &quot;aa&quot;\n<strong>Output:</strong> 2\n<strong>Explanation:\n</strong>Both of the strings are a prefix of s. \nNote that the same string can occur multiple times in words, and it should be counted each time.</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= words.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= words[i].length, s.length &lt;= 10</code></li>\n\t<li><code>words[i]</code> and <code>s</code> consist of lowercase English letters <strong>only</strong>.</li>\n</ul>\n","translatedContent":"<p>给你一个字符串数组&nbsp;<code>words</code>&nbsp;和一个字符串&nbsp;<code>s</code>&nbsp;，其中&nbsp;<code>words[i]</code> 和&nbsp;<code>s</code>&nbsp;只包含 <strong>小写英文字母</strong>&nbsp;。</p>\n\n<p>请你返回 <code>words</code>&nbsp;中是字符串 <code>s</code>&nbsp;<strong>前缀&nbsp;</strong>的 <strong>字符串数目</strong>&nbsp;。</p>\n\n<p>一个字符串的 <strong>前缀</strong>&nbsp;是出现在字符串开头的子字符串。<strong>子字符串</strong>&nbsp;是一个字符串中的连续一段字符序列。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><b>输入：</b>words = [\"a\",\"b\",\"c\",\"ab\",\"bc\",\"abc\"], s = \"abc\"\n<b>输出：</b>3\n<strong>解释：</strong>\nwords 中是 s = \"abc\" 前缀的字符串为：\n\"a\" ，\"ab\" 和 \"abc\" 。\n所以 words 中是字符串 s 前缀的字符串数目为 3 。</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><b>输入：</b>words = [\"a\",\"a\"], s = \"aa\"\n<b>输出：</b>2\n<strong>解释：\n</strong>两个字符串都是 s 的前缀。\n注意，相同的字符串可能在 words 中出现多次，它们应该被计数多次。</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= words.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= words[i].length, s.length &lt;= 10</code></li>\n\t<li><code>words[i]</code> 和&nbsp;<code>s</code>&nbsp;<strong>只</strong>&nbsp;包含小写英文字母。</li>\n</ul>\n","translatedTitle":"统计是给定字符串前缀的字符串数目","codeSnippets":[{"lang":"C++","langSlug":"cpp","code":"class Solution {\npublic:\n    int countPrefixes(vector<string>& words, string s) {\n        \n    }\n};"},{"lang":"Java","langSlug":"java","code":"class Solution {\n    public int countPrefixes(String[] words, String s) {\n\n    }\n}"},{"lang":"Python","langSlug":"python","code":"class Solution(object):\n    def countPrefixes(self, words, s):\n        \"\"\"\n        :type words: List[str]\n        :type s: str\n        :rtype: int\n        \"\"\""},{"lang":"Python3","langSlug":"python3","code":"class Solution:\n    def countPrefixes(self, words: List[str], s: str) -> int:"},{"lang":"C","langSlug":"c","code":"\n\nint countPrefixes(char ** words, int wordsSize, char * s){\n\n}"},{"lang":"C#","langSlug":"csharp","code":"public class Solution {\n    public int CountPrefixes(string[] words, string s) {\n\n    }\n}"},{"lang":"JavaScript","langSlug":"javascript","code":"/**\n * @param {string[]} words\n * @param {string} s\n * @return {number}\n */\nvar countPrefixes = function(words, s) {\n\n};"},{"lang":"Ruby","langSlug":"ruby","code":"# @param {String[]} words\n# @param {String} s\n# @return {Integer}\ndef count_prefixes(words, s)\n\nend"},{"lang":"Swift","langSlug":"swift","code":"class Solution {\n    func countPrefixes(_ words: [String], _ s: String) -> Int {\n\n    }\n}"},{"lang":"Go","langSlug":"golang","code":"func countPrefixes(words []string, s string) int {\n\n}"},{"lang":"Scala","langSlug":"scala","code":"object Solution {\n    def countPrefixes(words: Array[String], s: String): Int = {\n\n    }\n}"},{"lang":"Kotlin","langSlug":"kotlin","code":"class Solution {\n    fun countPrefixes(words: Array<String>, s: String): Int {\n\n    }\n}"},{"lang":"Rust","langSlug":"rust","code":"impl Solution {\n    pub fn count_prefixes(words: Vec<String>, s: String) -> i32 {\n\n    }\n}"},{"lang":"PHP","langSlug":"php","code":"class Solution {\n\n    /**\n     * @param String[] $words\n     * @param String $s\n     * @return Integer\n     */\n    function countPrefixes($words, $s) {\n\n    }\n}"},{"lang":"TypeScript","langSlug":"typescript","code":"function countPrefixes(words: string[], s: string): number {\n\n};"},{"lang":"Racket","langSlug":"racket","code":"(define/contract (count-prefixes words s)\n  (-> (listof string?) string? exact-integer?)\n\n  )"},{"lang":"Erlang","langSlug":"erlang","code":"-spec count_prefixes(Words :: [unicode:unicode_binary()], S :: unicode:unicode_binary()) -> integer().\ncount_prefixes(Words, S) ->\n  ."},{"lang":"Elixir","langSlug":"elixir","code":"defmodule Solution do\n  @spec count_prefixes(words :: [String.t], s :: String.t) :: integer\n  def count_prefixes(words, s) do\n\n  end\nend"}]}