{"slug":"number-of-valid-clock-times","id":2528,"frontendId":6208,"title":"Number of Valid Clock Times","categoryTitle":"Algorithms","difficulty":0,"starred":false,"locked":false,"likes":0,"dislikes":0,"status":2,"tag":[],"totalAccepted":2754,"totalSubmission":7169,"hints":["Brute force all possible clock times.","Checking if a clock time is valid can be done with Regex."],"sampleTestCase":"\"?5:00\"","exampleTestcases":"\"?5:00\"\n\"0?:0?\"\n\"??:??\"","content":"<p>You are given a string of length <code>5</code> called <code>time</code>, representing the current time on a digital clock in the format <code>&quot;hh:mm&quot;</code>. The <strong>earliest</strong> possible time is <code>&quot;00:00&quot;</code> and the <strong>latest</strong> possible time is <code>&quot;23:59&quot;</code>.</p>\n\n<p>In the string <code>time</code>, the digits represented by the <code>?</code>&nbsp;symbol are <strong>unknown</strong>, and must be <strong>replaced</strong> with a digit from <code>0</code> to <code>9</code>.</p>\n\n<p>Return<em> an integer </em><code>answer</code><em>, the number of valid clock times that can be created by replacing every </em><code>?</code><em>&nbsp;with a digit from </em><code>0</code><em> to </em><code>9</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> time = &quot;?5:00&quot;\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> We can replace the ? with either a 0 or 1, producing &quot;05:00&quot; or &quot;15:00&quot;. Note that we cannot replace it with a 2, since the time &quot;25:00&quot; is invalid. In total, we have two choices.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> time = &quot;0?:0?&quot;\n<strong>Output:</strong> 100\n<strong>Explanation:</strong> Each ? can be replaced by any digit from 0 to 9, so we have 100 total choices.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> time = &quot;??:??&quot;\n<strong>Output:</strong> 1440\n<strong>Explanation:</strong> There are 24 possible choices for the hours, and 60 possible choices for the minutes. In total, we have 24 * 60 = 1440 choices.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>time</code> is a valid string of length <code>5</code> in the format <code>&quot;hh:mm&quot;</code>.</li>\n\t<li><code>&quot;00&quot; &lt;= hh &lt;= &quot;23&quot;</code></li>\n\t<li><code>&quot;00&quot; &lt;= mm &lt;= &quot;59&quot;</code></li>\n\t<li>Some of the digits might be replaced with <code>&#39;?&#39;</code> and need to be replaced with digits from <code>0</code> to <code>9</code>.</li>\n</ul>\n","translatedContent":"<p>给你一个长度为&nbsp;<code>5</code>&nbsp;的字符串&nbsp;<code>time</code>&nbsp;，表示一个电子时钟当前的时间，格式为&nbsp;<code>\"hh:mm\"</code>&nbsp;。<strong>最早</strong>&nbsp;可能的时间是&nbsp;<code>\"00:00\"</code>&nbsp;，<strong>最晚</strong>&nbsp;可能的时间是&nbsp;<code>\"23:59\"</code>&nbsp;。</p>\n\n<p>在字符串&nbsp;<code>time</code>&nbsp;中，被字符&nbsp;<code>?</code>&nbsp;替换掉的数位是 <strong>未知的</strong>&nbsp;，被替换的数字可能是&nbsp;<code>0</code>&nbsp;到&nbsp;<code>9</code>&nbsp;中的任何一个。</p>\n\n<p>请你返回一个整数<em>&nbsp;</em><code>answer</code>&nbsp;，将每一个 <code>?</code>&nbsp;都用<em>&nbsp;</em><code>0</code>&nbsp;到<em>&nbsp;</em><code>9</code>&nbsp;中一个数字替换后，可以得到的有效时间的数目。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><b>输入：</b>time = \"?5:00\"\n<b>输出：</b>2\n<b>解释：</b>我们可以将 ? 替换成 0 或 1 ，得到 \"05:00\" 或者 \"15:00\" 。注意我们不能替换成 2 ，因为时间 \"25:00\" 是无效时间。所以我们有两个选择。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><b>输入：</b>time = \"0?:0?\"\n<b>输出：</b>100\n<b>解释：</b>两个 ? 都可以被 0 到 9 之间的任意数字替换，所以我们总共有 100 种选择。\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre><b>输入：</b>time = \"??:??\"\n<b>输出：</b>1440\n<b>解释：</b>小时总共有 24 种选择，分钟总共有 60 种选择。所以总共有 24 * 60 = 1440 种选择。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>time</code>&nbsp;是一个长度为 <code>5</code>&nbsp;的有效字符串，格式为&nbsp;<code>\"hh:mm\"</code>&nbsp;。</li>\n\t<li><code>\"00\" &lt;= hh &lt;= \"23\"</code></li>\n\t<li><code>\"00\" &lt;= mm &lt;= \"59\"</code></li>\n\t<li>字符串中有的数位是&nbsp;<code>'?'</code>&nbsp;，需要用&nbsp;<code>0</code>&nbsp;到&nbsp;<code>9</code>&nbsp;之间的数字替换。</li>\n</ul>\n","translatedTitle":"有效时间的数目","codeSnippets":[{"lang":"C++","langSlug":"cpp","code":"class Solution {\npublic:\n    int countTime(string time) {\n        \n    }\n};"},{"lang":"Java","langSlug":"java","code":"class Solution {\n    public int countTime(String time) {\n\n    }\n}"},{"lang":"Python","langSlug":"python","code":"class Solution(object):\n    def countTime(self, time):\n        \"\"\"\n        :type time: str\n        :rtype: int\n        \"\"\""},{"lang":"Python3","langSlug":"python3","code":"class Solution:\n    def countTime(self, time: str) -> int:"},{"lang":"C","langSlug":"c","code":"\n\nint countTime(char * time){\n\n}"},{"lang":"C#","langSlug":"csharp","code":"public class Solution {\n    public int CountTime(string time) {\n\n    }\n}"},{"lang":"JavaScript","langSlug":"javascript","code":"/**\n * @param {string} time\n * @return {number}\n */\nvar countTime = function(time) {\n\n};"},{"lang":"Ruby","langSlug":"ruby","code":"# @param {String} time\n# @return {Integer}\ndef count_time(time)\n\nend"},{"lang":"Swift","langSlug":"swift","code":"class Solution {\n    func countTime(_ time: String) -> Int {\n\n    }\n}"},{"lang":"Go","langSlug":"golang","code":"func countTime(time string) int {\n\n}"},{"lang":"Scala","langSlug":"scala","code":"object Solution {\n    def countTime(time: String): Int = {\n\n    }\n}"},{"lang":"Kotlin","langSlug":"kotlin","code":"class Solution {\n    fun countTime(time: String): Int {\n\n    }\n}"},{"lang":"Rust","langSlug":"rust","code":"impl Solution {\n    pub fn count_time(time: String) -> i32 {\n\n    }\n}"},{"lang":"PHP","langSlug":"php","code":"class Solution {\n\n    /**\n     * @param String $time\n     * @return Integer\n     */\n    function countTime($time) {\n\n    }\n}"},{"lang":"TypeScript","langSlug":"typescript","code":"function countTime(time: string): number {\n\n};"},{"lang":"Racket","langSlug":"racket","code":"(define/contract (count-time time)\n  (-> string? exact-integer?)\n\n  )"},{"lang":"Erlang","langSlug":"erlang","code":"-spec count_time(Time :: unicode:unicode_binary()) -> integer().\ncount_time(Time) ->\n  ."},{"lang":"Elixir","langSlug":"elixir","code":"defmodule Solution do\n  @spec count_time(time :: String.t) :: integer\n  def count_time(time) do\n\n  end\nend"},{"lang":"Dart","langSlug":"dart","code":"class Solution {\n  int countTime(String time) {\n\n  }\n}"}]}