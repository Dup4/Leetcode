{"slug":"check-if-number-has-equal-digit-count-and-digit-value","id":2377,"frontendId":6083,"title":"Check if Number Has Equal Digit Count and Digit Value","categoryTitle":"Algorithms","difficulty":0,"starred":false,"locked":false,"likes":0,"dislikes":0,"status":2,"tag":[],"totalAccepted":3430,"totalSubmission":4298,"hints":["Count the frequency of each digit in num."],"sampleTestCase":"\"1210\"","exampleTestcases":"\"1210\"\n\"030\"","content":"<p>You are given a <strong>0-indexed</strong> string <code>num</code> of length <code>n</code> consisting of digits.</p>\n\n<p>Return <code>true</code> <em>if for <strong>every</strong> index </em><code>i</code><em> in the range </em><code>0 &lt;= i &lt; n</code><em>, the digit </em><code>i</code><em> occurs </em><code>num[i]</code><em> times in </em><code>num</code><em>, otherwise return </em><code>false</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = &quot;1210&quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong>\nnum[0] = &#39;1&#39;. The digit 0 occurs once in num.\nnum[1] = &#39;2&#39;. The digit 1 occurs twice in num.\nnum[2] = &#39;1&#39;. The digit 2 occurs once in num.\nnum[3] = &#39;0&#39;. The digit 3 occurs zero times in num.\nThe condition holds true for every index in &quot;1210&quot;, so return true.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = &quot;030&quot;\n<strong>Output:</strong> false\n<strong>Explanation:</strong>\nnum[0] = &#39;0&#39;. The digit 0 should occur zero times, but actually occurs twice in num.\nnum[1] = &#39;3&#39;. The digit 1 should occur three times, but actually occurs zero times in num.\nnum[2] = &#39;0&#39;. The digit 2 occurs zero times in num.\nThe indices 0 and 1 both violate the condition, so return false.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == num.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 10</code></li>\n\t<li><code>num</code> consists of digits.</li>\n</ul>\n","translatedContent":"<p>给你一个下标从 <strong>0</strong>&nbsp;开始长度为 <code>n</code>&nbsp;的字符串&nbsp;<code>num</code>&nbsp;，它只包含数字。</p>\n\n<p>如果对于 <strong>每个</strong><em>&nbsp;</em><code>0 &lt;= i &lt; n</code>&nbsp;的下标&nbsp;<code>i</code>&nbsp;，都满足数位<em>&nbsp;</em><code>i</code>&nbsp;在 <code>num</code>&nbsp;中出现了&nbsp;<code>num[i]</code>次，那么请你返回&nbsp;<code>true</code>&nbsp;，否则返回&nbsp;<code>false</code>&nbsp;。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><b>输入：</b>num = \"1210\"\n<b>输出：</b>true\n<strong>解释：</strong>\nnum[0] = '1' 。数字 0 在 num 中出现了一次。\nnum[1] = '2' 。数字 1 在 num 中出现了两次。\nnum[2] = '1' 。数字 2 在 num 中出现了一次。\nnum[3] = '0' 。数字 3 在 num 中出现了零次。\n\"1210\" 满足题目要求条件，所以返回 true 。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><b>输入：</b>num = \"030\"\n<b>输出：</b>false\n<strong>解释：</strong>\nnum[0] = '0' 。数字 0 应该出现 0 次，但是在 num 中出现了一次。\nnum[1] = '3' 。数字 1 应该出现 3 次，但是在 num 中出现了零次。\nnum[2] = '0' 。数字 2 在 num 中出现了 0 次。\n下标 0 和 1 都违反了题目要求，所以返回 false 。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>n == num.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 10</code></li>\n\t<li><code>num</code>&nbsp;只包含数字。</li>\n</ul>\n","translatedTitle":"判断一个数的数字计数是否等于数位的值","codeSnippets":[{"lang":"C++","langSlug":"cpp","code":"class Solution {\npublic:\n    bool digitCount(string num) {\n        \n    }\n};"},{"lang":"Java","langSlug":"java","code":"class Solution {\n    public boolean digitCount(String num) {\n\n    }\n}"},{"lang":"Python","langSlug":"python","code":"class Solution(object):\n    def digitCount(self, num):\n        \"\"\"\n        :type num: str\n        :rtype: bool\n        \"\"\""},{"lang":"Python3","langSlug":"python3","code":"class Solution:\n    def digitCount(self, num: str) -> bool:"},{"lang":"C","langSlug":"c","code":"\n\nbool digitCount(char * num){\n\n}"},{"lang":"C#","langSlug":"csharp","code":"public class Solution {\n    public bool DigitCount(string num) {\n\n    }\n}"},{"lang":"JavaScript","langSlug":"javascript","code":"/**\n * @param {string} num\n * @return {boolean}\n */\nvar digitCount = function(num) {\n\n};"},{"lang":"Ruby","langSlug":"ruby","code":"# @param {String} num\n# @return {Boolean}\ndef digit_count(num)\n\nend"},{"lang":"Swift","langSlug":"swift","code":"class Solution {\n    func digitCount(_ num: String) -> Bool {\n\n    }\n}"},{"lang":"Go","langSlug":"golang","code":"func digitCount(num string) bool {\n\n}"},{"lang":"Scala","langSlug":"scala","code":"object Solution {\n    def digitCount(num: String): Boolean = {\n\n    }\n}"},{"lang":"Kotlin","langSlug":"kotlin","code":"class Solution {\n    fun digitCount(num: String): Boolean {\n\n    }\n}"},{"lang":"Rust","langSlug":"rust","code":"impl Solution {\n    pub fn digit_count(num: String) -> bool {\n\n    }\n}"},{"lang":"PHP","langSlug":"php","code":"class Solution {\n\n    /**\n     * @param String $num\n     * @return Boolean\n     */\n    function digitCount($num) {\n\n    }\n}"},{"lang":"TypeScript","langSlug":"typescript","code":"function digitCount(num: string): boolean {\n\n};"},{"lang":"Racket","langSlug":"racket","code":"(define/contract (digit-count num)\n  (-> string? boolean?)\n\n  )"},{"lang":"Erlang","langSlug":"erlang","code":"-spec digit_count(Num :: unicode:unicode_binary()) -> boolean().\ndigit_count(Num) ->\n  ."},{"lang":"Elixir","langSlug":"elixir","code":"defmodule Solution do\n  @spec digit_count(num :: String.t) :: boolean\n  def digit_count(num) do\n\n  end\nend"}]}