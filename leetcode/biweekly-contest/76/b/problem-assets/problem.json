{"slug":"number-of-ways-to-buy-pens-and-pencils","id":2351,"frontendId":6061,"title":"Number of Ways to Buy Pens and Pencils","categoryTitle":"Algorithms","difficulty":1,"starred":false,"locked":false,"likes":0,"dislikes":0,"status":0,"tag":[],"totalAccepted":3324,"totalSubmission":6121,"hints":["Fix the number of pencils purchased and calculate the number of ways to buy pens.","Sum up the number of ways to buy pens for each amount of pencils purchased to get the answer."],"sampleTestCase":"20\n10\n5","exampleTestcases":"20\n10\n5\n5\n10\n10","content":"<p>You are given an integer <code>total</code> indicating the amount of money you have. You are also given two integers <code>cost1</code> and <code>cost2</code> indicating the price of a pen and pencil respectively. You can spend <strong>part or all</strong> of your money to buy multiple quantities (or none) of each kind of writing utensil.</p>\n\n<p>Return <em>the <strong>number of distinct ways</strong> you can buy some number of pens and pencils.</em></p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> total = 20, cost1 = 10, cost2 = 5\n<strong>Output:</strong> 9\n<strong>Explanation:</strong> The price of a pen is 10 and the price of a pencil is 5.\n- If you buy 0 pens, you can buy 0, 1, 2, 3, or 4 pencils.\n- If you buy 1 pen, you can buy 0, 1, or 2 pencils.\n- If you buy 2 pens, you cannot buy any pencils.\nThe total number of ways to buy pens and pencils is 5 + 3 + 1 = 9.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> total = 5, cost1 = 10, cost2 = 10\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> The price of both pens and pencils are 10, which cost more than total, so you cannot buy any writing utensils. Therefore, there is only 1 way: buy 0 pens and 0 pencils.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= total, cost1, cost2 &lt;= 10<sup>6</sup></code></li>\n</ul>\n","translatedContent":"<p>给你一个整数&nbsp;<code>total</code>&nbsp;，表示你拥有的总钱数。同时给你两个整数&nbsp;<code>cost1</code> 和&nbsp;<code>cost2</code>&nbsp;，分别表示一支钢笔和一支铅笔的价格。你可以花费你部分或者全部的钱，去买任意数目的两种笔。</p>\n\n<p>请你返回购买钢笔和铅笔的&nbsp;<strong>不同方案数目</strong>&nbsp;。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><b>输入：</b>total = 20, cost1 = 10, cost2 = 5\n<b>输出：</b>9\n<b>解释：</b>一支钢笔的价格为 10 ，一支铅笔的价格为 5 。\n- 如果你买 0 支钢笔，那么你可以买 0 ，1 ，2 ，3 或者 4 支铅笔。\n- 如果你买 1 支钢笔，那么你可以买 0 ，1 或者 2 支铅笔。\n- 如果你买 2 支钢笔，那么你没法买任何铅笔。\n所以买钢笔和铅笔的总方案数为 5 + 3 + 1 = 9 种。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><b>输入：</b>total = 5, cost1 = 10, cost2 = 10\n<b>输出：</b>1\n<b>解释：</b>钢笔和铅笔的价格都为 10 ，都比拥有的钱数多，所以你没法购买任何文具。所以只有 1 种方案：买 0 支钢笔和 0 支铅笔。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= total, cost1, cost2 &lt;= 10<sup>6</sup></code></li>\n</ul>\n","translatedTitle":"买钢笔和铅笔的方案数","codeSnippets":[{"lang":"C++","langSlug":"cpp","code":"class Solution {\npublic:\n    long long waysToBuyPensPencils(int total, int cost1, int cost2) {\n        \n    }\n};"},{"lang":"Java","langSlug":"java","code":"class Solution {\n    public long waysToBuyPensPencils(int total, int cost1, int cost2) {\n\n    }\n}"},{"lang":"Python","langSlug":"python","code":"class Solution(object):\n    def waysToBuyPensPencils(self, total, cost1, cost2):\n        \"\"\"\n        :type total: int\n        :type cost1: int\n        :type cost2: int\n        :rtype: int\n        \"\"\""},{"lang":"Python3","langSlug":"python3","code":"class Solution:\n    def waysToBuyPensPencils(self, total: int, cost1: int, cost2: int) -> int:"},{"lang":"C","langSlug":"c","code":"\n\nlong long waysToBuyPensPencils(int total, int cost1, int cost2){\n\n}"},{"lang":"C#","langSlug":"csharp","code":"public class Solution {\n    public long WaysToBuyPensPencils(int total, int cost1, int cost2) {\n\n    }\n}"},{"lang":"JavaScript","langSlug":"javascript","code":"/**\n * @param {number} total\n * @param {number} cost1\n * @param {number} cost2\n * @return {number}\n */\nvar waysToBuyPensPencils = function(total, cost1, cost2) {\n\n};"},{"lang":"Ruby","langSlug":"ruby","code":"# @param {Integer} total\n# @param {Integer} cost1\n# @param {Integer} cost2\n# @return {Integer}\ndef ways_to_buy_pens_pencils(total, cost1, cost2)\n\nend"},{"lang":"Swift","langSlug":"swift","code":"class Solution {\n    func waysToBuyPensPencils(_ total: Int, _ cost1: Int, _ cost2: Int) -> Int {\n\n    }\n}"},{"lang":"Go","langSlug":"golang","code":"func waysToBuyPensPencils(total int, cost1 int, cost2 int) int64 {\n\n}"},{"lang":"Scala","langSlug":"scala","code":"object Solution {\n    def waysToBuyPensPencils(total: Int, cost1: Int, cost2: Int): Long = {\n\n    }\n}"},{"lang":"Kotlin","langSlug":"kotlin","code":"class Solution {\n    fun waysToBuyPensPencils(total: Int, cost1: Int, cost2: Int): Long {\n\n    }\n}"},{"lang":"Rust","langSlug":"rust","code":"impl Solution {\n    pub fn ways_to_buy_pens_pencils(total: i32, cost1: i32, cost2: i32) -> i64 {\n\n    }\n}"},{"lang":"PHP","langSlug":"php","code":"class Solution {\n\n    /**\n     * @param Integer $total\n     * @param Integer $cost1\n     * @param Integer $cost2\n     * @return Integer\n     */\n    function waysToBuyPensPencils($total, $cost1, $cost2) {\n\n    }\n}"},{"lang":"TypeScript","langSlug":"typescript","code":"function waysToBuyPensPencils(total: number, cost1: number, cost2: number): number {\n\n};"},{"lang":"Racket","langSlug":"racket","code":"(define/contract (ways-to-buy-pens-pencils total cost1 cost2)\n  (-> exact-integer? exact-integer? exact-integer? exact-integer?)\n\n  )"},{"lang":"Erlang","langSlug":"erlang","code":"-spec ways_to_buy_pens_pencils(Total :: integer(), Cost1 :: integer(), Cost2 :: integer()) -> integer().\nways_to_buy_pens_pencils(Total, Cost1, Cost2) ->\n  ."},{"lang":"Elixir","langSlug":"elixir","code":"defmodule Solution do\n  @spec ways_to_buy_pens_pencils(total :: integer, cost1 :: integer, cost2 :: integer) :: integer\n  def ways_to_buy_pens_pencils(total, cost1, cost2) do\n\n  end\nend"}]}