{"slug":"sort-array-by-increasing-frequency","id":1741,"title":"Sort Array by Increasing Frequency","categoryTitle":"Algorithms","difficulty":0,"starred":false,"locked":false,"likes":39,"dislikes":0,"status":2,"tag":[{"name":"Array","slug":"array","translatedName":"数组"},{"name":"Hash Table","slug":"hash-table","translatedName":"哈希表"},{"name":"Sorting","slug":"sorting","translatedName":"排序"}],"totalAccepted":10974,"totalSubmission":15617,"hints":["Count the frequency of each value.","Use a custom comparator to compare values by their frequency. If two values have the same frequency, compare their values."],"sampleTestCase":"[1,1,2,2,2,3]","exampleTestcases":"[1,1,2,2,2,3]\n[2,3,1,3,2]\n[-1,1,-6,4,5,-6,1,4,1]","content":"<p>Given an array of integers <code>nums</code>, sort the array in <strong>increasing</strong> order based on the frequency of the values. If multiple values have the same frequency, sort them in <strong>decreasing</strong> order.</p>\n\n<p>Return the <em>sorted array</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,1,2,2,2,3]\n<strong>Output:</strong> [3,1,1,2,2,2]\n<strong>Explanation:</strong> &#39;3&#39; has a frequency of 1, &#39;1&#39; has a frequency of 2, and &#39;2&#39; has a frequency of 3.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,3,1,3,2]\n<strong>Output:</strong> [1,3,3,2,2]\n<strong>Explanation:</strong> &#39;2&#39; and &#39;3&#39; both have a frequency of 2, so they are sorted in decreasing order.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [-1,1,-6,4,5,-6,1,4,1]\n<strong>Output:</strong> [5,-1,4,4,-6,-6,1,1,1]</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 100</code></li>\n\t<li><code>-100 &lt;= nums[i] &lt;= 100</code></li>\n</ul>\n","translatedContent":"<p>给你一个整数数组 <code>nums</code> ，请你将数组按照每个值的频率 <strong>升序</strong> 排序。如果有多个值的频率相同，请你按照数值本身将它们 <strong>降序</strong> 排序。 </p>\n\n<p>请你返回排序后的数组。</p>\n\n<p> </p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><b>输入：</b>nums = [1,1,2,2,2,3]\n<b>输出：</b>[3,1,1,2,2,2]\n<b>解释：</b>'3' 频率为 1，'1' 频率为 2，'2' 频率为 3 。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><b>输入：</b>nums = [2,3,1,3,2]\n<b>输出：</b>[1,3,3,2,2]\n<b>解释：</b>'2' 和 '3' 频率都为 2 ，所以它们之间按照数值本身降序排序。\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre><b>输入：</b>nums = [-1,1,-6,4,5,-6,1,4,1]\n<b>输出：</b>[5,-1,4,4,-6,-6,1,1,1]</pre>\n\n<p> </p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 100</code></li>\n\t<li><code>-100 &lt;= nums[i] &lt;= 100</code></li>\n</ul>\n","translatedTitle":"按照频率将数组升序排序","codeSnippets":[{"lang":"C++","langSlug":"cpp","code":"class Solution {\npublic:\n    vector<int> frequencySort(vector<int>& nums) {\n\n    }\n};"},{"lang":"Java","langSlug":"java","code":"class Solution {\n    public int[] frequencySort(int[] nums) {\n\n    }\n}"},{"lang":"Python","langSlug":"python","code":"class Solution(object):\n    def frequencySort(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: List[int]\n        \"\"\""},{"lang":"Python3","langSlug":"python3","code":"class Solution:\n    def frequencySort(self, nums: List[int]) -> List[int]:"},{"lang":"C","langSlug":"c","code":"\n\n/**\n * Note: The returned array must be malloced, assume caller calls free().\n */\nint* frequencySort(int* nums, int numsSize, int* returnSize){\n\n}"},{"lang":"C#","langSlug":"csharp","code":"public class Solution {\n    public int[] FrequencySort(int[] nums) {\n\n    }\n}"},{"lang":"JavaScript","langSlug":"javascript","code":"/**\n * @param {number[]} nums\n * @return {number[]}\n */\nvar frequencySort = function(nums) {\n\n};"},{"lang":"Ruby","langSlug":"ruby","code":"# @param {Integer[]} nums\n# @return {Integer[]}\ndef frequency_sort(nums)\n\nend"},{"lang":"Swift","langSlug":"swift","code":"class Solution {\n    func frequencySort(_ nums: [Int]) -> [Int] {\n\n    }\n}"},{"lang":"Go","langSlug":"golang","code":"func frequencySort(nums []int) []int {\n\n}"},{"lang":"Scala","langSlug":"scala","code":"object Solution {\n    def frequencySort(nums: Array[Int]): Array[Int] = {\n\n    }\n}"},{"lang":"Kotlin","langSlug":"kotlin","code":"class Solution {\n    fun frequencySort(nums: IntArray): IntArray {\n\n    }\n}"},{"lang":"Rust","langSlug":"rust","code":"impl Solution {\n    pub fn frequency_sort(nums: Vec<i32>) -> Vec<i32> {\n\n    }\n}"},{"lang":"PHP","langSlug":"php","code":"class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return Integer[]\n     */\n    function frequencySort($nums) {\n\n    }\n}"},{"lang":"TypeScript","langSlug":"typescript","code":"function frequencySort(nums: number[]): number[] {\n\n};"},{"lang":"Racket","langSlug":"racket","code":"(define/contract (frequency-sort nums)\n  (-> (listof exact-integer?) (listof exact-integer?))\n\n  )"},{"lang":"Erlang","langSlug":"erlang","code":"-spec frequency_sort(Nums :: [integer()]) -> [integer()].\nfrequency_sort(Nums) ->\n  ."},{"lang":"Elixir","langSlug":"elixir","code":"defmodule Solution do\n  @spec frequency_sort(nums :: [integer]) :: [integer]\n  def frequency_sort(nums) do\n\n  end\nend"}]}