{"slug":"categorize-box-according-to-criteria","id":2619,"frontendId":2525,"title":"Categorize Box According to Criteria","categoryTitle":"Algorithms","difficulty":0,"starred":false,"locked":false,"likes":0,"dislikes":0,"status":2,"tag":[],"totalAccepted":2398,"totalSubmission":5103,"hints":["Use conditional statements to find the right category of the box."],"sampleTestCase":"1000\n35\n700\n300","exampleTestcases":"1000\n35\n700\n300\n200\n50\n800\n50","content":"<p>Given four integers <code>length</code>, <code>width</code>, <code>height</code>, and <code>mass</code>, representing the dimensions and mass of a box, respectively, return <em>a string representing the <strong>category</strong> of the box</em>.</p>\n\n<ul>\n\t<li>The box is <code>&quot;Bulky&quot;</code> if:\n\n\t<ul>\n\t\t<li><strong>Any</strong> of the dimensions of the box is greater or equal to <code>10<sup>4</sup></code>.</li>\n\t\t<li>Or, the <strong>volume</strong> of the box is greater or equal to <code>10<sup>9</sup></code>.</li>\n\t</ul>\n\t</li>\n\t<li>If the mass of the box is greater or equal to <code>100</code>, it is <code>&quot;Heavy&quot;.</code></li>\n\t<li>If the box is both <code>&quot;Bulky&quot;</code> and <code>&quot;Heavy&quot;</code>, then its category is <code>&quot;Both&quot;</code>.</li>\n\t<li>If the box is neither <code>&quot;Bulky&quot;</code> nor <code>&quot;Heavy&quot;</code>, then its category is <code>&quot;Neither&quot;</code>.</li>\n\t<li>If the box is <code>&quot;Bulky&quot;</code> but not <code>&quot;Heavy&quot;</code>, then its category is <code>&quot;Bulky&quot;</code>.</li>\n\t<li>If the box is <code>&quot;Heavy&quot;</code> but not <code>&quot;Bulky&quot;</code>, then its category is <code>&quot;Heavy&quot;</code>.</li>\n</ul>\n\n<p><strong>Note</strong> that the volume of the box is the product of its length, width and height.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> length = 1000, width = 35, height = 700, mass = 300\n<strong>Output:</strong> &quot;Heavy&quot;\n<strong>Explanation:</strong> \nNone of the dimensions of the box is greater or equal to 10<sup>4</sup>. \nIts volume = 24500000 &lt;= 10<sup>9</sup>. So it cannot be categorized as &quot;Bulky&quot;.\nHowever mass &gt;= 100, so the box is &quot;Heavy&quot;.\nSince the box is not &quot;Bulky&quot; but &quot;Heavy&quot;, we return &quot;Heavy&quot;.</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> length = 200, width = 50, height = 800, mass = 50\n<strong>Output:</strong> &quot;Neither&quot;\n<strong>Explanation:</strong> \nNone of the dimensions of the box is greater or equal to 10<sup>4</sup>.\nIts volume = 8 * 10<sup>6</sup> &lt;= 10<sup>9</sup>. So it cannot be categorized as &quot;Bulky&quot;.\nIts mass is also less than 100, so it cannot be categorized as &quot;Heavy&quot; either. \nSince its neither of the two above categories, we return &quot;Neither&quot;.</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= length, width, height &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= mass &lt;= 10<sup>3</sup></code></li>\n</ul>\n","translatedContent":"<p>给你四个整数&nbsp;<code>length</code>&nbsp;，<code>width</code>&nbsp;，<code>height</code>&nbsp;和&nbsp;<code>mass</code>&nbsp;，分别表示一个箱子的三个维度和质量，请你返回一个表示箱子 <strong>类别</strong> 的字符串。</p>\n\n<ul>\n\t<li>如果满足以下条件，那么箱子是&nbsp;<code>\"Bulky\"</code>&nbsp;的：\n\n\t<ul>\n\t\t<li>箱子 <strong>至少有一个</strong> 维度大于等于 <code>10<sup>4</sup></code>&nbsp;。</li>\n\t\t<li>或者箱子的 <strong>体积</strong> 大于等于&nbsp;<code>10<sup>9</sup></code>&nbsp;。</li>\n\t</ul>\n\t</li>\n\t<li>如果箱子的质量大于等于&nbsp;<code>100</code>&nbsp;，那么箱子是&nbsp;<code>\"Heavy\"</code>&nbsp;的。</li>\n\t<li>如果箱子同时是&nbsp;<code>\"Bulky\"</code> 和&nbsp;<code>\"Heavy\"</code>&nbsp;，那么返回类别为&nbsp;<code>\"Both\"</code>&nbsp;。</li>\n\t<li>如果箱子既不是&nbsp;<code>\"Bulky\"</code>&nbsp;，也不是&nbsp;<code>\"Heavy\"</code>&nbsp;，那么返回类别为&nbsp;<code>\"Neither\"</code>&nbsp;。</li>\n\t<li>如果箱子是&nbsp;<code>\"Bulky\"</code>&nbsp;但不是&nbsp;<code>\"Heavy\"</code>&nbsp;，那么返回类别为&nbsp;<code>\"Bulky\"</code>&nbsp;。</li>\n\t<li>如果箱子是&nbsp;<code>\"Heavy\"</code>&nbsp;但不是&nbsp;<code>\"Bulky\"</code>&nbsp;，那么返回类别为&nbsp;<code>\"Heavy\"</code>&nbsp;。</li>\n</ul>\n\n<p><strong>注意</strong>，箱子的体积等于箱子的长度、宽度和高度的乘积。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<b>输入：</b>length = 1000, width = 35, height = 700, mass = 300\n<b>输出：</b>\"Heavy\"\n<b>解释：</b>\n箱子没有任何维度大于等于 10<sup>4 </sup>。\n体积为 24500000 &lt;= 10<sup>9 </sup>。所以不能归类为 \"Bulky\" 。\n但是质量 &gt;= 100 ，所以箱子是 \"Heavy\" 的。\n由于箱子不是 \"Bulky\" 但是是 \"Heavy\" ，所以我们返回 \"Heavy\" 。</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<b>输入：</b>length = 200, width = 50, height = 800, mass = 50\n<b>输出：</b>\"Neither\"\n<b>解释：</b>\n箱子没有任何维度大于等于 10<sup>4</sup>&nbsp;。\n体积为 8 * 10<sup>6</sup> &lt;= 10<sup>9</sup>&nbsp;。所以不能归类为 \"Bulky\" 。\n质量小于 100 ，所以不能归类为 \"Heavy\" 。\n由于不属于上述两者任何一类，所以我们返回 \"Neither\" 。</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= length, width, height &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= mass &lt;= 10<sup>3</sup></code></li>\n</ul>\n","translatedTitle":"根据规则将箱子分类","codeSnippets":[{"lang":"C++","langSlug":"cpp","code":"class Solution {\npublic:\n    string categorizeBox(int length, int width, int height, int mass) {\n        \n    }\n};"},{"lang":"Java","langSlug":"java","code":"class Solution {\n    public String categorizeBox(int length, int width, int height, int mass) {\n\n    }\n}"},{"lang":"Python","langSlug":"python","code":"class Solution(object):\n    def categorizeBox(self, length, width, height, mass):\n        \"\"\"\n        :type length: int\n        :type width: int\n        :type height: int\n        :type mass: int\n        :rtype: str\n        \"\"\""},{"lang":"Python3","langSlug":"python3","code":"class Solution:\n    def categorizeBox(self, length: int, width: int, height: int, mass: int) -> str:"},{"lang":"C","langSlug":"c","code":"char * categorizeBox(int length, int width, int height, int mass){\n\n}"},{"lang":"C#","langSlug":"csharp","code":"public class Solution {\n    public string CategorizeBox(int length, int width, int height, int mass) {\n\n    }\n}"},{"lang":"JavaScript","langSlug":"javascript","code":"/**\n * @param {number} length\n * @param {number} width\n * @param {number} height\n * @param {number} mass\n * @return {string}\n */\nvar categorizeBox = function(length, width, height, mass) {\n\n};"},{"lang":"Ruby","langSlug":"ruby","code":"# @param {Integer} length\n# @param {Integer} width\n# @param {Integer} height\n# @param {Integer} mass\n# @return {String}\ndef categorize_box(length, width, height, mass)\n\nend"},{"lang":"Swift","langSlug":"swift","code":"class Solution {\n    func categorizeBox(_ length: Int, _ width: Int, _ height: Int, _ mass: Int) -> String {\n\n    }\n}"},{"lang":"Go","langSlug":"golang","code":"func categorizeBox(length int, width int, height int, mass int) string {\n\n}"},{"lang":"Scala","langSlug":"scala","code":"object Solution {\n    def categorizeBox(length: Int, width: Int, height: Int, mass: Int): String = {\n\n    }\n}"},{"lang":"Kotlin","langSlug":"kotlin","code":"class Solution {\n    fun categorizeBox(length: Int, width: Int, height: Int, mass: Int): String {\n\n    }\n}"},{"lang":"Rust","langSlug":"rust","code":"impl Solution {\n    pub fn categorize_box(length: i32, width: i32, height: i32, mass: i32) -> String {\n\n    }\n}"},{"lang":"PHP","langSlug":"php","code":"class Solution {\n\n    /**\n     * @param Integer $length\n     * @param Integer $width\n     * @param Integer $height\n     * @param Integer $mass\n     * @return String\n     */\n    function categorizeBox($length, $width, $height, $mass) {\n\n    }\n}"},{"lang":"TypeScript","langSlug":"typescript","code":"function categorizeBox(length: number, width: number, height: number, mass: number): string {\n\n};"},{"lang":"Racket","langSlug":"racket","code":"(define/contract (categorize-box length width height mass)\n  (-> exact-integer? exact-integer? exact-integer? exact-integer? string?)\n\n  )"},{"lang":"Erlang","langSlug":"erlang","code":"-spec categorize_box(Length :: integer(), Width :: integer(), Height :: integer(), Mass :: integer()) -> unicode:unicode_binary().\ncategorize_box(Length, Width, Height, Mass) ->\n  ."},{"lang":"Elixir","langSlug":"elixir","code":"defmodule Solution do\n  @spec categorize_box(length :: integer, width :: integer, height :: integer, mass :: integer) :: String.t\n  def categorize_box(length, width, height, mass) do\n\n  end\nend"},{"lang":"Dart","langSlug":"dart","code":"class Solution {\n  String categorizeBox(int length, int width, int height, int mass) {\n\n  }\n}"}]}