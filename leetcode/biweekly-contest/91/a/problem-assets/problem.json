{"slug":"number-of-distinct-averages","id":2561,"frontendId":6237,"title":"Number of Distinct Averages","categoryTitle":"Algorithms","difficulty":0,"starred":false,"locked":false,"likes":0,"dislikes":0,"status":2,"tag":[],"totalAccepted":2744,"totalSubmission":4044,"hints":["Try sorting the array.","Store the averages being calculated, and find the distinct ones."],"sampleTestCase":"[4,1,4,0,3,5]","exampleTestcases":"[4,1,4,0,3,5]\n[1,100]","content":"<p>You are given a <strong>0-indexed</strong> integer array <code>nums</code> of <strong>even</strong> length.</p>\n\n<p>As long as <code>nums</code> is <strong>not</strong> empty, you must repetitively:</p>\n\n<ul>\n\t<li>Find the minimum number in <code>nums</code> and remove it.</li>\n\t<li>Find the maximum number in <code>nums</code> and remove it.</li>\n\t<li>Calculate the average of the two removed numbers.</li>\n</ul>\n\n<p>The <strong>average</strong> of two numbers <code>a</code> and <code>b</code> is <code>(a + b) / 2</code>.</p>\n\n<ul>\n\t<li>For example, the average of <code>2</code> and <code>3</code> is <code>(2 + 3) / 2 = 2.5</code>.</li>\n</ul>\n\n<p>Return<em> the number of <strong>distinct</strong> averages calculated using the above process</em>.</p>\n\n<p><strong>Note</strong> that when there is a tie for a minimum or maximum number, any can be removed.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [4,1,4,0,3,5]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong>\n1. Remove 0 and 5, and the average is (0 + 5) / 2 = 2.5. Now, nums = [4,1,4,3].\n2. Remove 1 and 4. The average is (1 + 4) / 2 = 2.5, and nums = [4,3].\n3. Remove 3 and 4, and the average is (3 + 4) / 2 = 3.5.\nSince there are 2 distinct numbers among 2.5, 2.5, and 3.5, we return 2.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,100]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong>\nThere is only one average to be calculated after removing 1 and 100, so we return 1.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= nums.length &lt;= 100</code></li>\n\t<li><code>nums.length</code> is even.</li>\n\t<li><code>0 &lt;= nums[i] &lt;= 100</code></li>\n</ul>\n","translatedContent":"<p>给你一个下标从 <strong>0</strong>&nbsp;开始长度为 <strong>偶数</strong>&nbsp;的整数数组&nbsp;<code>nums</code>&nbsp;。</p>\n\n<p>只要&nbsp;<code>nums</code> <strong>不是</strong>&nbsp;空数组，你就重复执行以下步骤：</p>\n\n<ul>\n\t<li>找到&nbsp;<code>nums</code>&nbsp;中的最小值，并删除它。</li>\n\t<li>找到&nbsp;<code>nums</code>&nbsp;中的最大值，并删除它。</li>\n\t<li>计算删除两数的平均值。</li>\n</ul>\n\n<p>两数 <code>a</code>&nbsp;和 <code>b</code>&nbsp;的 <strong>平均值</strong>&nbsp;为&nbsp;<code>(a + b) / 2</code>&nbsp;。</p>\n\n<ul>\n\t<li>比方说，<code>2</code>&nbsp;和&nbsp;<code>3</code>&nbsp;的平均值是&nbsp;<code>(2 + 3) / 2 = 2.5</code>&nbsp;。</li>\n</ul>\n\n<p>返回上述过程能得到的 <strong>不同</strong>&nbsp;平均值的数目。</p>\n\n<p><strong>注意</strong>&nbsp;，如果最小值或者最大值有重复元素，可以删除任意一个。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><b>输入：</b>nums = [4,1,4,0,3,5]\n<b>输出：</b>2\n<strong>解释：</strong>\n1. 删除 0 和 5 ，平均值是 (0 + 5) / 2 = 2.5 ，现在 nums = [4,1,4,3] 。\n2. 删除 1 和 4 ，平均值是 (1 + 4) / 2 = 2.5 ，现在 nums = [4,3] 。\n3. 删除 3 和 4 ，平均值是 (3 + 4) / 2 = 3.5 。\n2.5 ，2.5 和 3.5 之中总共有 2 个不同的数，我们返回 2 。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><b>输入：</b>nums = [1,100]\n<b>输出：</b>1\n<strong>解释：</strong>\n删除 1 和 100 后只有一个平均值，所以我们返回 1 。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= nums.length &lt;= 100</code></li>\n\t<li><code>nums.length</code>&nbsp;是偶数。</li>\n\t<li><code>0 &lt;= nums[i] &lt;= 100</code></li>\n</ul>\n","translatedTitle":"不同的平均值数目","codeSnippets":[{"lang":"C++","langSlug":"cpp","code":"class Solution {\npublic:\n    int distinctAverages(vector<int>& nums) {\n        \n    }\n};"},{"lang":"Java","langSlug":"java","code":"class Solution {\n    public int distinctAverages(int[] nums) {\n\n    }\n}"},{"lang":"Python","langSlug":"python","code":"class Solution(object):\n    def distinctAverages(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\""},{"lang":"Python3","langSlug":"python3","code":"class Solution:\n    def distinctAverages(self, nums: List[int]) -> int:"},{"lang":"C","langSlug":"c","code":"int distinctAverages(int* nums, int numsSize){\n\n}"},{"lang":"C#","langSlug":"csharp","code":"public class Solution {\n    public int DistinctAverages(int[] nums) {\n\n    }\n}"},{"lang":"JavaScript","langSlug":"javascript","code":"/**\n * @param {number[]} nums\n * @return {number}\n */\nvar distinctAverages = function(nums) {\n\n};"},{"lang":"Ruby","langSlug":"ruby","code":"# @param {Integer[]} nums\n# @return {Integer}\ndef distinct_averages(nums)\n\nend"},{"lang":"Swift","langSlug":"swift","code":"class Solution {\n    func distinctAverages(_ nums: [Int]) -> Int {\n\n    }\n}"},{"lang":"Go","langSlug":"golang","code":"func distinctAverages(nums []int) int {\n\n}"},{"lang":"Scala","langSlug":"scala","code":"object Solution {\n    def distinctAverages(nums: Array[Int]): Int = {\n\n    }\n}"},{"lang":"Kotlin","langSlug":"kotlin","code":"class Solution {\n    fun distinctAverages(nums: IntArray): Int {\n\n    }\n}"},{"lang":"Rust","langSlug":"rust","code":"impl Solution {\n    pub fn distinct_averages(nums: Vec<i32>) -> i32 {\n\n    }\n}"},{"lang":"PHP","langSlug":"php","code":"class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function distinctAverages($nums) {\n\n    }\n}"},{"lang":"TypeScript","langSlug":"typescript","code":"function distinctAverages(nums: number[]): number {\n\n};"},{"lang":"Racket","langSlug":"racket","code":"(define/contract (distinct-averages nums)\n  (-> (listof exact-integer?) exact-integer?)\n\n  )"},{"lang":"Erlang","langSlug":"erlang","code":"-spec distinct_averages(Nums :: [integer()]) -> integer().\ndistinct_averages(Nums) ->\n  ."},{"lang":"Elixir","langSlug":"elixir","code":"defmodule Solution do\n  @spec distinct_averages(nums :: [integer]) :: integer\n  def distinct_averages(nums) do\n\n  end\nend"},{"lang":"Dart","langSlug":"dart","code":"class Solution {\n  int distinctAverages(List<int> nums) {\n\n  }\n}"}]}