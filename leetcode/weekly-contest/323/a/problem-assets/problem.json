{"slug":"delete-greatest-value-in-each-row","id":2585,"frontendId":6257,"title":"Delete Greatest Value in Each Row","categoryTitle":"Algorithms","difficulty":0,"starred":false,"locked":false,"likes":0,"dislikes":0,"status":2,"tag":[],"totalAccepted":3559,"totalSubmission":4093,"hints":["Iterate from the first to the last row and if there exist some unmarked cells, take a maximum from them and mark that cell as visited.","Add a maximum of newly marked cells to answer and repeat that operation until the whole matrix becomes marked."],"sampleTestCase":"[[1,2,4],[3,3,1]]","exampleTestcases":"[[1,2,4],[3,3,1]]\n[[10]]","content":"<p>You are given an <code>m x n</code> matrix <code>grid</code> consisting of positive integers.</p>\n\n<p>Perform the following operation until <code>grid</code> becomes empty:</p>\n\n<ul>\n\t<li>Delete the element with the greatest value from each row. If multiple such elements exist, delete any of them.</li>\n\t<li>Add the maximum of deleted elements to the answer.</li>\n</ul>\n\n<p><strong>Note</strong> that the number of columns decreases by one after each operation.</p>\n\n<p>Return <em>the answer after performing the operations described above</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"problem-assets/https:--assets.leetcode.com-uploads-2022-10-19-q1ex1.jpg\" style=\"width: 600px; height: 135px;\" />\n<pre>\n<strong>Input:</strong> grid = [[1,2,4],[3,3,1]]\n<strong>Output:</strong> 8\n<strong>Explanation:</strong> The diagram above shows the removed values in each step.\n- In the first operation, we remove 4 from the first row and 3 from the second row (notice that, there are two cells with value 3 and we can remove any of them). We add 4 to the answer.\n- In the second operation, we remove 2 from the first row and 3 from the second row. We add 3 to the answer.\n- In the third operation, we remove 1 from the first row and 1 from the second row. We add 1 to the answer.\nThe final answer = 4 + 3 + 1 = 8.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"problem-assets/https:--assets.leetcode.com-uploads-2022-10-19-q1ex2.jpg\" style=\"width: 83px; height: 83px;\" />\n<pre>\n<strong>Input:</strong> grid = [[10]]\n<strong>Output:</strong> 10\n<strong>Explanation:</strong> The diagram above shows the removed values in each step.\n- In the first operation, we remove 10 from the first row. We add 10 to the answer.\nThe final answer = 10.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == grid.length</code></li>\n\t<li><code>n == grid[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 50</code></li>\n\t<li><code>1 &lt;= grid[i][j] &lt;= 100</code></li>\n</ul>\n","translatedContent":"<p>给你一个 <code>m x n</code> 大小的矩阵 <code>grid</code> ，由若干正整数组成。</p>\n\n<p>执行下述操作，直到 <code>grid</code> 变为空矩阵：</p>\n\n<ul>\n\t<li>从每一行删除值最大的元素。如果存在多个这样的值，删除其中任何一个。</li>\n\t<li>将删除元素中的最大值与答案相加。</li>\n</ul>\n\n<p><strong>注意</strong> 每执行一次操作，矩阵中列的数据就会减 1 。</p>\n\n<p>返回执行上述操作后的答案。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<p><img alt=\"\" src=\"problem-assets/https:--assets.leetcode.com-uploads-2022-10-19-q1ex1.jpg\" style=\"width: 600px; height: 135px;\" /></p>\n\n<pre>\n<strong>输入：</strong>grid = [[1,2,4],[3,3,1]]\n<strong>输出：</strong>8\n<strong>解释：</strong>上图展示在每一步中需要移除的值。\n- 在第一步操作中，从第一行删除 4 ，从第二行删除 3（注意，有两个单元格中的值为 3 ，我们可以删除任一）。在答案上加 4 。\n- 在第二步操作中，从第一行删除 2 ，从第二行删除 3 。在答案上加 3 。\n- 在第三步操作中，从第一行删除 1 ，从第二行删除 1 。在答案上加 1 。\n最终，答案 = 4 + 3 + 1 = 8 。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<p><img alt=\"\" src=\"problem-assets/https:--assets.leetcode.com-uploads-2022-10-19-q1ex2.jpg\" style=\"width: 83px; height: 83px;\" /></p>\n\n<pre>\n<strong>输入：</strong>grid = [[10]]\n<strong>输出：</strong>10\n<strong>解释：</strong>上图展示在每一步中需要移除的值。\n- 在第一步操作中，从第一行删除 10 。在答案上加 10 。\n最终，答案 = 10 。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>m == grid.length</code></li>\n\t<li><code>n == grid[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 50</code></li>\n\t<li><code>1 &lt;= grid[i][j] &lt;= 100</code></li>\n</ul>\n","translatedTitle":"删除每行中的最大值","codeSnippets":[{"lang":"C++","langSlug":"cpp","code":"class Solution {\npublic:\n    int deleteGreatestValue(vector<vector<int>>& grid) {\n        \n    }\n};"},{"lang":"Java","langSlug":"java","code":"class Solution {\n    public int deleteGreatestValue(int[][] grid) {\n\n    }\n}"},{"lang":"Python","langSlug":"python","code":"class Solution(object):\n    def deleteGreatestValue(self, grid):\n        \"\"\"\n        :type grid: List[List[int]]\n        :rtype: int\n        \"\"\""},{"lang":"Python3","langSlug":"python3","code":"class Solution:\n    def deleteGreatestValue(self, grid: List[List[int]]) -> int:"},{"lang":"C","langSlug":"c","code":"int deleteGreatestValue(int** grid, int gridSize, int* gridColSize){\n\n}"},{"lang":"C#","langSlug":"csharp","code":"public class Solution {\n    public int DeleteGreatestValue(int[][] grid) {\n\n    }\n}"},{"lang":"JavaScript","langSlug":"javascript","code":"/**\n * @param {number[][]} grid\n * @return {number}\n */\nvar deleteGreatestValue = function(grid) {\n\n};"},{"lang":"Ruby","langSlug":"ruby","code":"# @param {Integer[][]} grid\n# @return {Integer}\ndef delete_greatest_value(grid)\n\nend"},{"lang":"Swift","langSlug":"swift","code":"class Solution {\n    func deleteGreatestValue(_ grid: [[Int]]) -> Int {\n\n    }\n}"},{"lang":"Go","langSlug":"golang","code":"func deleteGreatestValue(grid [][]int) int {\n\n}"},{"lang":"Scala","langSlug":"scala","code":"object Solution {\n    def deleteGreatestValue(grid: Array[Array[Int]]): Int = {\n\n    }\n}"},{"lang":"Kotlin","langSlug":"kotlin","code":"class Solution {\n    fun deleteGreatestValue(grid: Array<IntArray>): Int {\n\n    }\n}"},{"lang":"Rust","langSlug":"rust","code":"impl Solution {\n    pub fn delete_greatest_value(grid: Vec<Vec<i32>>) -> i32 {\n\n    }\n}"},{"lang":"PHP","langSlug":"php","code":"class Solution {\n\n    /**\n     * @param Integer[][] $grid\n     * @return Integer\n     */\n    function deleteGreatestValue($grid) {\n\n    }\n}"},{"lang":"TypeScript","langSlug":"typescript","code":"function deleteGreatestValue(grid: number[][]): number {\n\n};"},{"lang":"Racket","langSlug":"racket","code":"(define/contract (delete-greatest-value grid)\n  (-> (listof (listof exact-integer?)) exact-integer?)\n\n  )"},{"lang":"Erlang","langSlug":"erlang","code":"-spec delete_greatest_value(Grid :: [[integer()]]) -> integer().\ndelete_greatest_value(Grid) ->\n  ."},{"lang":"Elixir","langSlug":"elixir","code":"defmodule Solution do\n  @spec delete_greatest_value(grid :: [[integer]]) :: integer\n  def delete_greatest_value(grid) do\n\n  end\nend"},{"lang":"Dart","langSlug":"dart","code":"class Solution {\n  int deleteGreatestValue(List<List<int>> grid) {\n\n  }\n}"}]}