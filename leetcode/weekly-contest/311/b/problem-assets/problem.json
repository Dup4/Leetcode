{"slug":"length-of-the-longest-alphabetical-continuous-substring","id":2492,"frontendId":6181,"title":"Length of the Longest Alphabetical Continuous Substring","categoryTitle":"Algorithms","difficulty":1,"starred":false,"locked":false,"likes":4,"dislikes":0,"status":2,"tag":[],"totalAccepted":7161,"totalSubmission":11661,"hints":["What is the longest possible continuous substring?","The size of the longest possible continuous substring is at most 26, so we can just brute force the answer."],"sampleTestCase":"\"abacaba\"","exampleTestcases":"\"abacaba\"\n\"abcde\"","content":"<p>An <strong>alphabetical continuous string</strong> is a string consisting of consecutive letters in the alphabet. In other words, it is any substring of the string <code>&quot;abcdefghijklmnopqrstuvwxyz&quot;</code>.</p>\n\n<ul>\n\t<li>For example, <code>&quot;abc&quot;</code> is an alphabetical continuous string, while <code>&quot;acb&quot;</code> and <code>&quot;za&quot;</code> are not.</li>\n</ul>\n\n<p>Given a string <code>s</code> consisting of lowercase letters only, return the <em>length of the <strong>longest</strong> alphabetical continuous substring.</em></p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;abacaba&quot;\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> There are 4 distinct continuous substrings: &quot;a&quot;, &quot;b&quot;, &quot;c&quot; and &quot;ab&quot;.\n&quot;ab&quot; is the longest continuous substring.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;abcde&quot;\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> &quot;abcde&quot; is the longest continuous substring.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>s</code> consists of only English lowercase letters.</li>\n</ul>\n","translatedContent":"<p><strong>字母序连续字符串</strong> 是由字母表中连续字母组成的字符串。换句话说，字符串 <code>\"abcdefghijklmnopqrstuvwxyz\"</code> 的任意子字符串都是 <strong>字母序连续字符串</strong> 。</p>\n\n<ul>\n\t<li>例如，<code>\"abc\"</code> 是一个字母序连续字符串，而 <code>\"acb\"</code> 和 <code>\"za\"</code> 不是。</li>\n</ul>\n\n<p>给你一个仅由小写英文字母组成的字符串 <code>s</code> ，返回其 <strong>最长</strong> 的 字母序连续子字符串 的长度。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>s = \"abacaba\"\n<strong>输出：</strong>2\n<strong>解释：</strong>共有 4 个不同的字母序连续子字符串 \"a\"、\"b\"、\"c\" 和 \"ab\" 。\n\"ab\" 是最长的字母序连续子字符串。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>s = \"abcde\"\n<strong>输出：</strong>5\n<strong>解释：</strong>\"abcde\" 是最长的字母序连续子字符串。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>s</code> 由小写英文字母组成</li>\n</ul>\n","translatedTitle":"最长的字母序连续子字符串的长度","codeSnippets":[{"lang":"C++","langSlug":"cpp","code":"class Solution {\npublic:\n    int longestContinuousSubstring(string s) {\n        \n    }\n};"},{"lang":"Java","langSlug":"java","code":"class Solution {\n    public int longestContinuousSubstring(String s) {\n\n    }\n}"},{"lang":"Python","langSlug":"python","code":"class Solution(object):\n    def longestContinuousSubstring(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\""},{"lang":"Python3","langSlug":"python3","code":"class Solution:\n    def longestContinuousSubstring(self, s: str) -> int:"},{"lang":"C","langSlug":"c","code":"\n\nint longestContinuousSubstring(char * s){\n\n}"},{"lang":"C#","langSlug":"csharp","code":"public class Solution {\n    public int LongestContinuousSubstring(string s) {\n\n    }\n}"},{"lang":"JavaScript","langSlug":"javascript","code":"/**\n * @param {string} s\n * @return {number}\n */\nvar longestContinuousSubstring = function(s) {\n\n};"},{"lang":"Ruby","langSlug":"ruby","code":"# @param {String} s\n# @return {Integer}\ndef longest_continuous_substring(s)\n\nend"},{"lang":"Swift","langSlug":"swift","code":"class Solution {\n    func longestContinuousSubstring(_ s: String) -> Int {\n\n    }\n}"},{"lang":"Go","langSlug":"golang","code":"func longestContinuousSubstring(s string) int {\n\n}"},{"lang":"Scala","langSlug":"scala","code":"object Solution {\n    def longestContinuousSubstring(s: String): Int = {\n\n    }\n}"},{"lang":"Kotlin","langSlug":"kotlin","code":"class Solution {\n    fun longestContinuousSubstring(s: String): Int {\n\n    }\n}"},{"lang":"Rust","langSlug":"rust","code":"impl Solution {\n    pub fn longest_continuous_substring(s: String) -> i32 {\n\n    }\n}"},{"lang":"PHP","langSlug":"php","code":"class Solution {\n\n    /**\n     * @param String $s\n     * @return Integer\n     */\n    function longestContinuousSubstring($s) {\n\n    }\n}"},{"lang":"TypeScript","langSlug":"typescript","code":"function longestContinuousSubstring(s: string): number {\n\n};"},{"lang":"Racket","langSlug":"racket","code":"(define/contract (longest-continuous-substring s)\n  (-> string? exact-integer?)\n\n  )"},{"lang":"Erlang","langSlug":"erlang","code":"-spec longest_continuous_substring(S :: unicode:unicode_binary()) -> integer().\nlongest_continuous_substring(S) ->\n  ."},{"lang":"Elixir","langSlug":"elixir","code":"defmodule Solution do\n  @spec longest_continuous_substring(s :: String.t) :: integer\n  def longest_continuous_substring(s) do\n\n  end\nend"},{"lang":"Dart","langSlug":"dart","code":"class Solution {\n  int longestContinuousSubstring(String s) {\n\n  }\n}"}]}