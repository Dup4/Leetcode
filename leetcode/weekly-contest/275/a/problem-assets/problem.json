{"slug":"check-if-every-row-and-column-contains-all-numbers","id":2254,"title":"Check if Every Row and Column Contains All Numbers","categoryTitle":"Algorithms","difficulty":0,"starred":false,"locked":false,"likes":6,"dislikes":0,"status":0,"tag":[{"name":"Array","slug":"array","translatedName":"数组"},{"name":"Hash Table","slug":"hash-table","translatedName":"哈希表"},{"name":"Matrix","slug":"matrix","translatedName":"矩阵"}],"totalAccepted":6564,"totalSubmission":11595,"hints":["Use for loops to check each row for every number from 1 to n. Similarly, do the same for each column.","For each check, you can keep a set of the unique elements in the checked row/col. By the end of the check, the size of the set should be n."],"sampleTestCase":"[[1,2,3],[3,1,2],[2,3,1]]","exampleTestcases":"[[1,2,3],[3,1,2],[2,3,1]]\n[[1,1,1],[1,2,3],[1,2,3]]","content":"<p>An <code>n x n</code> matrix is <strong>valid</strong> if every row and every column contains <strong>all</strong> the integers from <code>1</code> to <code>n</code> (<strong>inclusive</strong>).</p>\n\n<p>Given an <code>n x n</code> integer matrix <code>matrix</code>, return <code>true</code> <em>if the matrix is <strong>valid</strong>.</em> Otherwise, return <code>false</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"problem-assets/https:--assets.leetcode.com-uploads-2021-12-21-example1drawio.png\" style=\"width: 250px; height: 251px;\" />\n<pre>\n<strong>Input:</strong> matrix = [[1,2,3],[3,1,2],[2,3,1]]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> In this case, n = 3, and every row and column contains the numbers 1, 2, and 3.\nHence, we return true.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n<img alt=\"\" src=\"problem-assets/https:--assets.leetcode.com-uploads-2021-12-21-example2drawio.png\" style=\"width: 250px; height: 251px;\" />\n<pre>\n<strong>Input:</strong> matrix = [[1,1,1],[1,2,3],[1,2,3]]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> In this case, n = 3, but the first row and the first column do not contain the numbers 2 or 3.\nHence, we return false.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == matrix.length == matrix[i].length</code></li>\n\t<li><code>1 &lt;= n &lt;= 100</code></li>\n\t<li><code>1 &lt;= matrix[i][j] &lt;= n</code></li>\n</ul>\n","translatedContent":"<p>对一个大小为 <code>n x n</code> 的矩阵而言，如果其每一行和每一列都包含从 <code>1</code> 到 <code>n</code> 的 <strong>全部</strong> 整数（含 <code>1</code> 和 <code>n</code>），则认为该矩阵是一个 <strong>有效</strong> 矩阵。</p>\n\n<p>给你一个大小为 <code>n x n</code> 的整数矩阵 <code>matrix</code> ，请你判断矩阵是否为一个有效矩阵：如果是，返回 <code>true</code> ；否则，返回 <code>false</code> 。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<p><img alt=\"\" src=\"problem-assets/https:--assets.leetcode.com-uploads-2021-12-21-example1drawio.png\" style=\"width: 250px; height: 251px;\" /></p>\n\n<pre>\n<strong>输入：</strong>matrix = [[1,2,3],[3,1,2],[2,3,1]]\n<strong>输出：</strong>true\n<strong>解释：</strong>在此例中，n = 3 ，每一行和每一列都包含数字 1、2、3 。\n因此，返回 true 。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<p><img alt=\"\" src=\"problem-assets/https:--assets.leetcode.com-uploads-2021-12-21-example2drawio.png\" style=\"width: 250px; height: 251px;\" /></p>\n\n<pre>\n<strong>输入：</strong>matrix = [[1,1,1],[1,2,3],[1,2,3]]\n<strong>输出：</strong>false\n<strong>解释：</strong>在此例中，n = 3 ，但第一行和第一列不包含数字 2 和 3 。\n因此，返回 false 。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>n == matrix.length == matrix[i].length</code></li>\n\t<li><code>1 &lt;= n &lt;= 100</code></li>\n\t<li><code>1 &lt;= matrix[i][j] &lt;= n</code></li>\n</ul>\n","translatedTitle":"检查是否每一行每一列都包含全部整数","codeSnippets":[{"lang":"C++","langSlug":"cpp","code":"class Solution {\npublic:\n    bool checkValid(vector<vector<int>>& matrix) {\n        \n    }\n};"},{"lang":"Java","langSlug":"java","code":"class Solution {\n    public boolean checkValid(int[][] matrix) {\n\n    }\n}"},{"lang":"Python","langSlug":"python","code":"class Solution(object):\n    def checkValid(self, matrix):\n        \"\"\"\n        :type matrix: List[List[int]]\n        :rtype: bool\n        \"\"\""},{"lang":"Python3","langSlug":"python3","code":"class Solution:\n    def checkValid(self, matrix: List[List[int]]) -> bool:"},{"lang":"C","langSlug":"c","code":"\n\nbool checkValid(int** matrix, int matrixSize, int* matrixColSize){\n\n}"},{"lang":"C#","langSlug":"csharp","code":"public class Solution {\n    public bool CheckValid(int[][] matrix) {\n\n    }\n}"},{"lang":"JavaScript","langSlug":"javascript","code":"/**\n * @param {number[][]} matrix\n * @return {boolean}\n */\nvar checkValid = function(matrix) {\n\n};"},{"lang":"Ruby","langSlug":"ruby","code":"# @param {Integer[][]} matrix\n# @return {Boolean}\ndef check_valid(matrix)\n\nend"},{"lang":"Swift","langSlug":"swift","code":"class Solution {\n    func checkValid(_ matrix: [[Int]]) -> Bool {\n\n    }\n}"},{"lang":"Go","langSlug":"golang","code":"func checkValid(matrix [][]int) bool {\n\n}"},{"lang":"Scala","langSlug":"scala","code":"object Solution {\n    def checkValid(matrix: Array[Array[Int]]): Boolean = {\n\n    }\n}"},{"lang":"Kotlin","langSlug":"kotlin","code":"class Solution {\n    fun checkValid(matrix: Array<IntArray>): Boolean {\n\n    }\n}"},{"lang":"Rust","langSlug":"rust","code":"impl Solution {\n    pub fn check_valid(matrix: Vec<Vec<i32>>) -> bool {\n\n    }\n}"},{"lang":"PHP","langSlug":"php","code":"class Solution {\n\n    /**\n     * @param Integer[][] $matrix\n     * @return Boolean\n     */\n    function checkValid($matrix) {\n\n    }\n}"},{"lang":"TypeScript","langSlug":"typescript","code":"function checkValid(matrix: number[][]): boolean {\n\n};"},{"lang":"Racket","langSlug":"racket","code":"(define/contract (check-valid matrix)\n  (-> (listof (listof exact-integer?)) boolean?)\n\n  )"},{"lang":"Erlang","langSlug":"erlang","code":"-spec check_valid(Matrix :: [[integer()]]) -> boolean().\ncheck_valid(Matrix) ->\n  ."},{"lang":"Elixir","langSlug":"elixir","code":"defmodule Solution do\n  @spec check_valid(matrix :: [[integer]]) :: boolean\n  def check_valid(matrix) do\n\n  end\nend"}]}