{"slug":"percentage-of-letter-in-string","id":2365,"frontendId":2278,"title":"Percentage of Letter in String","categoryTitle":"Algorithms","difficulty":0,"starred":false,"locked":false,"likes":1,"dislikes":0,"status":2,"tag":[{"name":"String","slug":"string","translatedName":"字符串"}],"totalAccepted":8153,"totalSubmission":9931,"hints":["Can we count the number of occurrences of letter in s?","Recall that the percentage is calculated as (occurrences / total) * 100."],"sampleTestCase":"\"foobar\"\n\"o\"","exampleTestcases":"\"foobar\"\n\"o\"\n\"jjjj\"\n\"k\"","content":"<p>Given a string <code>s</code> and a character <code>letter</code>, return<em> the <strong>percentage</strong> of characters in </em><code>s</code><em> that equal </em><code>letter</code><em> <strong>rounded down</strong> to the nearest whole percent.</em></p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;foobar&quot;, letter = &quot;o&quot;\n<strong>Output:</strong> 33\n<strong>Explanation:</strong>\nThe percentage of characters in s that equal the letter &#39;o&#39; is 2 / 6 * 100% = 33% when rounded down, so we return 33.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;jjjj&quot;, letter = &quot;k&quot;\n<strong>Output:</strong> 0\n<strong>Explanation:</strong>\nThe percentage of characters in s that equal the letter &#39;k&#39; is 0%, so we return 0.</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 100</code></li>\n\t<li><code>s</code> consists of lowercase English letters.</li>\n\t<li><code>letter</code> is a lowercase English letter.</li>\n</ul>\n","translatedContent":"<p>给你一个字符串 <code>s</code> 和一个字符 <code>letter</code> ，返回在 <code>s</code> 中等于&nbsp;<code>letter</code>&nbsp;字符所占的 <strong>百分比</strong> ，向下取整到最接近的百分比。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>s = \"foobar\", letter = \"o\"\n<strong>输出：</strong>33\n<strong>解释：</strong>\n等于字母 'o' 的字符在 s 中占到的百分比是 2 / 6 * 100% = 33% ，向下取整，所以返回 33 。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>s = \"jjjj\", letter = \"k\"\n<strong>输出：</strong>0\n<strong>解释：</strong>\n等于字母 'k' 的字符在 s 中占到的百分比是 0% ，所以返回 0 。</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 100</code></li>\n\t<li><code>s</code> 由小写英文字母组成</li>\n\t<li><code>letter</code> 是一个小写英文字母</li>\n</ul>\n","translatedTitle":"字母在字符串中的百分比","codeSnippets":[{"lang":"C++","langSlug":"cpp","code":"class Solution {\npublic:\n    int percentageLetter(string s, char letter) {\n        \n    }\n};"},{"lang":"Java","langSlug":"java","code":"class Solution {\n    public int percentageLetter(String s, char letter) {\n\n    }\n}"},{"lang":"Python","langSlug":"python","code":"class Solution(object):\n    def percentageLetter(self, s, letter):\n        \"\"\"\n        :type s: str\n        :type letter: str\n        :rtype: int\n        \"\"\""},{"lang":"Python3","langSlug":"python3","code":"class Solution:\n    def percentageLetter(self, s: str, letter: str) -> int:"},{"lang":"C","langSlug":"c","code":"\n\nint percentageLetter(char * s, char letter){\n\n}"},{"lang":"C#","langSlug":"csharp","code":"public class Solution {\n    public int PercentageLetter(string s, char letter) {\n\n    }\n}"},{"lang":"JavaScript","langSlug":"javascript","code":"/**\n * @param {string} s\n * @param {character} letter\n * @return {number}\n */\nvar percentageLetter = function(s, letter) {\n\n};"},{"lang":"Ruby","langSlug":"ruby","code":"# @param {String} s\n# @param {Character} letter\n# @return {Integer}\ndef percentage_letter(s, letter)\n\nend"},{"lang":"Swift","langSlug":"swift","code":"class Solution {\n    func percentageLetter(_ s: String, _ letter: Character) -> Int {\n\n    }\n}"},{"lang":"Go","langSlug":"golang","code":"func percentageLetter(s string, letter byte) int {\n\n}"},{"lang":"Scala","langSlug":"scala","code":"object Solution {\n    def percentageLetter(s: String, letter: Char): Int = {\n\n    }\n}"},{"lang":"Kotlin","langSlug":"kotlin","code":"class Solution {\n    fun percentageLetter(s: String, letter: Char): Int {\n\n    }\n}"},{"lang":"Rust","langSlug":"rust","code":"impl Solution {\n    pub fn percentage_letter(s: String, letter: char) -> i32 {\n\n    }\n}"},{"lang":"PHP","langSlug":"php","code":"class Solution {\n\n    /**\n     * @param String $s\n     * @param String $letter\n     * @return Integer\n     */\n    function percentageLetter($s, $letter) {\n\n    }\n}"},{"lang":"TypeScript","langSlug":"typescript","code":"function percentageLetter(s: string, letter: string): number {\n\n};"},{"lang":"Racket","langSlug":"racket","code":"(define/contract (percentage-letter s letter)\n  (-> string? char? exact-integer?)\n\n  )"},{"lang":"Erlang","langSlug":"erlang","code":"-spec percentage_letter(S :: unicode:unicode_binary(), Letter :: char()) -> integer().\npercentage_letter(S, Letter) ->\n  ."},{"lang":"Elixir","langSlug":"elixir","code":"defmodule Solution do\n  @spec percentage_letter(s :: String.t, letter :: char) :: integer\n  def percentage_letter(s, letter) do\n\n  end\nend"}]}