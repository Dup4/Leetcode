{"slug":"sum-of-number-and-its-reverse","id":2541,"frontendId":6219,"title":"Sum of Number and Its Reverse","categoryTitle":"Algorithms","difficulty":1,"starred":false,"locked":false,"likes":0,"dislikes":0,"status":2,"tag":[],"totalAccepted":4820,"totalSubmission":10970,"hints":["The constraints are small enough that we can check every number.","To reverse a number, first convert it to a string. Then, create a new string that is the reverse of the first one. Finally, convert the new string back into a number."],"sampleTestCase":"443","exampleTestcases":"443\n63\n181","content":"<p>Given a <strong>non-negative</strong> integer <code>num</code>, return <code>true</code><em> if </em><code>num</code><em> can be expressed as the sum of any <strong>non-negative</strong> integer and its reverse, or </em><code>false</code><em> otherwise.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = 443\n<strong>Output:</strong> true\n<strong>Explanation:</strong> 172 + 271 = 443 so we return true.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = 63\n<strong>Output:</strong> false\n<strong>Explanation:</strong> 63 cannot be expressed as the sum of a non-negative integer and its reverse so we return false.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = 181\n<strong>Output:</strong> true\n<strong>Explanation:</strong> 140 + 041 = 181 so we return true. Note that when a number is reversed, there may be leading zeros.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= num &lt;= 10<sup>5</sup></code></li>\n</ul>\n","translatedContent":"<p>给你一个 <strong>非负</strong> 整数 <code>num</code> 。如果存在某个 <strong>非负</strong> 整数 <code>k</code> 满足 <code>k + reverse(k) = num</code>&nbsp; ，则返回 <code>true</code> ；否则，返回<em> </em><code>false</code> 。</p>\n\n<p><code>reverse(k)</code> 表示 <code>k</code> 反转每个数位后得到的数字。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>num = 443\n<strong>输出：</strong>true\n<strong>解释：</strong>172 + 271 = 443 ，所以返回 true 。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>num = 63\n<strong>输出：</strong>false\n<strong>解释：</strong>63 不能表示为非负整数及其反转后数字之和，返回 false 。\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre>\n<strong>输入：</strong>num = 181\n<strong>输出：</strong>true\n<strong>解释：</strong>140 + 041 = 181 ，所以返回 true 。注意，反转后的数字可能包含前导零。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= num &lt;= 10<sup>5</sup></code></li>\n</ul>\n","translatedTitle":"反转之后的数字和","codeSnippets":[{"lang":"C++","langSlug":"cpp","code":"class Solution {\npublic:\n    bool sumOfNumberAndReverse(int num) {\n        \n    }\n};"},{"lang":"Java","langSlug":"java","code":"class Solution {\n    public boolean sumOfNumberAndReverse(int num) {\n\n    }\n}"},{"lang":"Python","langSlug":"python","code":"class Solution(object):\n    def sumOfNumberAndReverse(self, num):\n        \"\"\"\n        :type num: int\n        :rtype: bool\n        \"\"\""},{"lang":"Python3","langSlug":"python3","code":"class Solution:\n    def sumOfNumberAndReverse(self, num: int) -> bool:"},{"lang":"C","langSlug":"c","code":"\n\nbool sumOfNumberAndReverse(int num){\n\n}"},{"lang":"C#","langSlug":"csharp","code":"public class Solution {\n    public bool SumOfNumberAndReverse(int num) {\n\n    }\n}"},{"lang":"JavaScript","langSlug":"javascript","code":"/**\n * @param {number} num\n * @return {boolean}\n */\nvar sumOfNumberAndReverse = function(num) {\n\n};"},{"lang":"Ruby","langSlug":"ruby","code":"# @param {Integer} num\n# @return {Boolean}\ndef sum_of_number_and_reverse(num)\n\nend"},{"lang":"Swift","langSlug":"swift","code":"class Solution {\n    func sumOfNumberAndReverse(_ num: Int) -> Bool {\n\n    }\n}"},{"lang":"Go","langSlug":"golang","code":"func sumOfNumberAndReverse(num int) bool {\n\n}"},{"lang":"Scala","langSlug":"scala","code":"object Solution {\n    def sumOfNumberAndReverse(num: Int): Boolean = {\n\n    }\n}"},{"lang":"Kotlin","langSlug":"kotlin","code":"class Solution {\n    fun sumOfNumberAndReverse(num: Int): Boolean {\n\n    }\n}"},{"lang":"Rust","langSlug":"rust","code":"impl Solution {\n    pub fn sum_of_number_and_reverse(num: i32) -> bool {\n\n    }\n}"},{"lang":"PHP","langSlug":"php","code":"class Solution {\n\n    /**\n     * @param Integer $num\n     * @return Boolean\n     */\n    function sumOfNumberAndReverse($num) {\n\n    }\n}"},{"lang":"TypeScript","langSlug":"typescript","code":"function sumOfNumberAndReverse(num: number): boolean {\n\n};"},{"lang":"Racket","langSlug":"racket","code":"(define/contract (sum-of-number-and-reverse num)\n  (-> exact-integer? boolean?)\n\n  )"},{"lang":"Erlang","langSlug":"erlang","code":"-spec sum_of_number_and_reverse(Num :: integer()) -> boolean().\nsum_of_number_and_reverse(Num) ->\n  ."},{"lang":"Elixir","langSlug":"elixir","code":"defmodule Solution do\n  @spec sum_of_number_and_reverse(num :: integer) :: boolean\n  def sum_of_number_and_reverse(num) do\n\n  end\nend"},{"lang":"Dart","langSlug":"dart","code":"class Solution {\n  bool sumOfNumberAndReverse(int num) {\n\n  }\n}"}]}