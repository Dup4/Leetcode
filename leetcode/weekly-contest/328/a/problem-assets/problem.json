{"slug":"difference-between-element-sum-and-digit-sum-of-an-array","id":2624,"frontendId":6291,"title":"Difference Between Element Sum and Digit Sum of an Array","categoryTitle":"Algorithms","difficulty":0,"starred":false,"locked":false,"likes":0,"dislikes":0,"status":2,"tag":[],"totalAccepted":3675,"totalSubmission":3990,"hints":["Use a simple for loop to iterate each number.","How you can get the digit for each number?"],"sampleTestCase":"[1,15,6,3]","exampleTestcases":"[1,15,6,3]\n[1,2,3,4]","content":"<p>You are given a positive integer array <code>nums</code>.</p>\n\n<ul>\n\t<li>The <strong>element sum</strong> is the sum of all the elements in <code>nums</code>.</li>\n\t<li>The <strong>digit sum</strong> is the sum of all the digits (not necessarily distinct) that appear in <code>nums</code>.</li>\n</ul>\n\n<p>Return <em>the <strong>absolute</strong> difference between the <strong>element sum</strong> and <strong>digit sum</strong> of </em><code>nums</code>.</p>\n\n<p><strong>Note</strong> that the absolute difference between two integers <code>x</code> and <code>y</code> is defined as <code>|x - y|</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,15,6,3]\n<strong>Output:</strong> 9\n<strong>Explanation:</strong> \nThe element sum of nums is 1 + 15 + 6 + 3 = 25.\nThe digit sum of nums is 1 + 1 + 5 + 6 + 3 = 16.\nThe absolute difference between the element sum and digit sum is |25 - 16| = 9.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,4]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong>\nThe element sum of nums is 1 + 2 + 3 + 4 = 10.\nThe digit sum of nums is 1 + 2 + 3 + 4 = 10.\nThe absolute difference between the element sum and digit sum is |10 - 10| = 0.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 2000</code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 2000</code></li>\n</ul>\n","translatedContent":"<p>给你一个正整数数组 <code>nums</code> 。</p>\n\n<ul>\n\t<li><strong>元素和</strong> 是 <code>nums</code> 中的所有元素相加求和。</li>\n\t<li><strong>数字和</strong> 是&nbsp;<code>nums</code> 中每一个元素的每一数位（重复数位需多次求和）相加求和。</li>\n</ul>\n\n<p>返回 <strong>元素和</strong> 与 <strong>数字和</strong> 的绝对差。</p>\n\n<p><strong>注意：</strong>两个整数 <code>x</code> 和 <code>y</code> 的绝对差定义为 <code>|x - y|</code> 。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>nums = [1,15,6,3]\n<strong>输出：</strong>9\n<strong>解释：</strong>\nnums 的元素和是 1 + 15 + 6 + 3 = 25 。\nnums 的数字和是 1 + 1 + 5 + 6 + 3 = 16 。\n元素和与数字和的绝对差是 |25 - 16| = 9 。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>nums = [1,2,3,4]\n<strong>输出：</strong>0\n<strong>解释：</strong>\nnums 的元素和是 1 + 2 + 3 + 4 = 10 。\nnums 的数字和是 1 + 2 + 3 + 4 = 10 。\n元素和与数字和的绝对差是 |10 - 10| = 0 。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 2000</code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 2000</code></li>\n</ul>\n","translatedTitle":"数组元素和与数字和的绝对差","codeSnippets":[{"lang":"C++","langSlug":"cpp","code":"class Solution {\npublic:\n    int differenceOfSum(vector<int>& nums) {\n        \n    }\n};"},{"lang":"Java","langSlug":"java","code":"class Solution {\n    public int differenceOfSum(int[] nums) {\n\n    }\n}"},{"lang":"Python","langSlug":"python","code":"class Solution(object):\n    def differenceOfSum(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\""},{"lang":"Python3","langSlug":"python3","code":"class Solution:\n    def differenceOfSum(self, nums: List[int]) -> int:"},{"lang":"C","langSlug":"c","code":"int differenceOfSum(int* nums, int numsSize){\n\n}"},{"lang":"C#","langSlug":"csharp","code":"public class Solution {\n    public int DifferenceOfSum(int[] nums) {\n\n    }\n}"},{"lang":"JavaScript","langSlug":"javascript","code":"/**\n * @param {number[]} nums\n * @return {number}\n */\nvar differenceOfSum = function(nums) {\n\n};"},{"lang":"Ruby","langSlug":"ruby","code":"# @param {Integer[]} nums\n# @return {Integer}\ndef difference_of_sum(nums)\n\nend"},{"lang":"Swift","langSlug":"swift","code":"class Solution {\n    func differenceOfSum(_ nums: [Int]) -> Int {\n\n    }\n}"},{"lang":"Go","langSlug":"golang","code":"func differenceOfSum(nums []int) int {\n\n}"},{"lang":"Scala","langSlug":"scala","code":"object Solution {\n    def differenceOfSum(nums: Array[Int]): Int = {\n\n    }\n}"},{"lang":"Kotlin","langSlug":"kotlin","code":"class Solution {\n    fun differenceOfSum(nums: IntArray): Int {\n\n    }\n}"},{"lang":"Rust","langSlug":"rust","code":"impl Solution {\n    pub fn difference_of_sum(nums: Vec<i32>) -> i32 {\n\n    }\n}"},{"lang":"PHP","langSlug":"php","code":"class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function differenceOfSum($nums) {\n\n    }\n}"},{"lang":"TypeScript","langSlug":"typescript","code":"function differenceOfSum(nums: number[]): number {\n\n};"},{"lang":"Racket","langSlug":"racket","code":"(define/contract (difference-of-sum nums)\n  (-> (listof exact-integer?) exact-integer?)\n\n  )"},{"lang":"Erlang","langSlug":"erlang","code":"-spec difference_of_sum(Nums :: [integer()]) -> integer().\ndifference_of_sum(Nums) ->\n  ."},{"lang":"Elixir","langSlug":"elixir","code":"defmodule Solution do\n  @spec difference_of_sum(nums :: [integer]) :: integer\n  def difference_of_sum(nums) do\n\n  end\nend"},{"lang":"Dart","langSlug":"dart","code":"class Solution {\n  int differenceOfSum(List<int> nums) {\n\n  }\n}"}]}