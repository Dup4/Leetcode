{"slug":"minimum-number-of-frogs-croaking","id":1534,"title":"Minimum Number of Frogs Croaking","categoryTitle":"Algorithms","difficulty":1,"starred":false,"locked":false,"likes":73,"dislikes":0,"status":2,"tag":[{"name":"String","slug":"string","translatedName":"字符串"},{"name":"Counting","slug":"counting","translatedName":"计数"}],"totalAccepted":8471,"totalSubmission":20017,"hints":["keep the frequency of all characters from \"croak\" using a hashmap.","For each character in the given string, greedily match it to a possible \"croak\"."],"sampleTestCase":"\"croakcroak\"","exampleTestcases":"\"croakcroak\"\n\"crcoakroak\"\n\"croakcrook\"","content":"<p>You are given the string <code>croakOfFrogs</code>, which represents a combination of the string <code>&quot;croak&quot;</code> from different frogs, that is, multiple frogs can croak at the same time, so multiple <code>&quot;croak&quot;</code> are mixed.</p>\n\n<p><em>Return the minimum number of </em>different<em> frogs to finish all the croaks in the given string.</em></p>\n\n<p>A valid <code>&quot;croak&quot;</code> means a frog is printing five letters <code>&#39;c&#39;</code>, <code>&#39;r&#39;</code>, <code>&#39;o&#39;</code>, <code>&#39;a&#39;</code>, and <code>&#39;k&#39;</code> <strong>sequentially</strong>. The frogs have to print all five letters to finish a croak. If the given string is not a combination of a valid <code>&quot;croak&quot;</code> return <code>-1</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> croakOfFrogs = &quot;croakcroak&quot;\n<strong>Output:</strong> 1 \n<strong>Explanation:</strong> One frog yelling &quot;croak<strong>&quot;</strong> twice.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> croakOfFrogs = &quot;crcoakroak&quot;\n<strong>Output:</strong> 2 \n<strong>Explanation:</strong> The minimum number of frogs is two. \nThe first frog could yell &quot;<strong>cr</strong>c<strong>oak</strong>roak&quot;.\nThe second frog could yell later &quot;cr<strong>c</strong>oak<strong>roak</strong>&quot;.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> croakOfFrogs = &quot;croakcrook&quot;\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> The given string is an invalid combination of &quot;croak<strong>&quot;</strong> from different frogs.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= croakOfFrogs.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>croakOfFrogs</code> is either <code>&#39;c&#39;</code>, <code>&#39;r&#39;</code>, <code>&#39;o&#39;</code>, <code>&#39;a&#39;</code>, or <code>&#39;k&#39;</code>.</li>\n</ul>\n","translatedContent":"<p>给你一个字符串 <code>croakOfFrogs</code>，它表示不同青蛙发出的蛙鸣声（字符串 &quot;croak&quot; ）的组合。由于同一时间可以有多只青蛙呱呱作响，所以&nbsp;<code>croakOfFrogs</code> 中会混合多个 &ldquo;croak&rdquo; <em>。</em>请你返回模拟字符串中所有蛙鸣所需不同青蛙的最少数目。</p>\n\n<p><strong>注意：</strong>要想发出蛙鸣 &quot;croak&quot;，青蛙必须 <strong>依序</strong> 输出 <code>&lsquo;c&rsquo;, &rsquo;r&rsquo;, &rsquo;o&rsquo;, &rsquo;a&rsquo;, &rsquo;k&rsquo;</code> 这 5 个字母。如果没有输出全部五个字母，那么它就不会发出声音。</p>\n\n<p>如果字符串 <code>croakOfFrogs</code> 不是由若干有效的 &quot;croak&quot; 字符混合而成，请返回 <code>-1</code> 。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>croakOfFrogs = &quot;croakcroak&quot;\n<strong>输出：</strong>1 \n<strong>解释：</strong>一只青蛙 &ldquo;呱呱&rdquo; 两次\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>croakOfFrogs = &quot;crcoakroak&quot;\n<strong>输出：</strong>2 \n<strong>解释：</strong>最少需要两只青蛙，&ldquo;呱呱&rdquo; 声用黑体标注\n第一只青蛙 &quot;<strong>cr</strong>c<strong>oak</strong>roak&quot;\n第二只青蛙 &quot;cr<strong>c</strong>oak<strong>roak</strong>&quot;\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre>\n<strong>输入：</strong>croakOfFrogs = &quot;croakcrook&quot;\n<strong>输出：</strong>-1\n<strong>解释：</strong>给出的字符串不是 &quot;croak<strong>&quot;</strong> 的有效组合。\n</pre>\n\n<p><strong>示例 4：</strong></p>\n\n<pre>\n<strong>输入：</strong>croakOfFrogs = &quot;croakcroa&quot;\n<strong>输出：</strong>-1\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;=&nbsp;croakOfFrogs.length &lt;= 10^5</code></li>\n\t<li>字符串中的字符只有 <code>&#39;c&#39;</code>, <code>&#39;r&#39;</code>, <code>&#39;o&#39;</code>, <code>&#39;a&#39;</code> 或者 <code>&#39;k&#39;</code></li>\n</ul>\n","translatedTitle":"数青蛙","codeSnippets":[{"lang":"C++","langSlug":"cpp","code":"class Solution {\npublic:\n    int minNumberOfFrogs(string croakOfFrogs) {\n\n    }\n};"},{"lang":"Java","langSlug":"java","code":"class Solution {\n    public int minNumberOfFrogs(String croakOfFrogs) {\n\n    }\n}"},{"lang":"Python","langSlug":"python","code":"class Solution(object):\n    def minNumberOfFrogs(self, croakOfFrogs):\n        \"\"\"\n        :type croakOfFrogs: str\n        :rtype: int\n        \"\"\""},{"lang":"Python3","langSlug":"python3","code":"class Solution:\n    def minNumberOfFrogs(self, croakOfFrogs: str) -> int:"},{"lang":"C","langSlug":"c","code":"\n\nint minNumberOfFrogs(char * croakOfFrogs){\n\n}"},{"lang":"C#","langSlug":"csharp","code":"public class Solution {\n    public int MinNumberOfFrogs(string croakOfFrogs) {\n\n    }\n}"},{"lang":"JavaScript","langSlug":"javascript","code":"/**\n * @param {string} croakOfFrogs\n * @return {number}\n */\nvar minNumberOfFrogs = function(croakOfFrogs) {\n\n};"},{"lang":"Ruby","langSlug":"ruby","code":"# @param {String} croak_of_frogs\n# @return {Integer}\ndef min_number_of_frogs(croak_of_frogs)\n\nend"},{"lang":"Swift","langSlug":"swift","code":"class Solution {\n    func minNumberOfFrogs(_ croakOfFrogs: String) -> Int {\n\n    }\n}"},{"lang":"Go","langSlug":"golang","code":"func minNumberOfFrogs(croakOfFrogs string) int {\n\n}"},{"lang":"Scala","langSlug":"scala","code":"object Solution {\n    def minNumberOfFrogs(croakOfFrogs: String): Int = {\n\n    }\n}"},{"lang":"Kotlin","langSlug":"kotlin","code":"class Solution {\n    fun minNumberOfFrogs(croakOfFrogs: String): Int {\n\n    }\n}"},{"lang":"Rust","langSlug":"rust","code":"impl Solution {\n    pub fn min_number_of_frogs(croak_of_frogs: String) -> i32 {\n\n    }\n}"},{"lang":"PHP","langSlug":"php","code":"class Solution {\n\n    /**\n     * @param String $croakOfFrogs\n     * @return Integer\n     */\n    function minNumberOfFrogs($croakOfFrogs) {\n\n    }\n}"},{"lang":"TypeScript","langSlug":"typescript","code":"function minNumberOfFrogs(croakOfFrogs: string): number {\n\n};"},{"lang":"Racket","langSlug":"racket","code":"(define/contract (min-number-of-frogs croakOfFrogs)\n  (-> string? exact-integer?)\n\n  )"},{"lang":"Erlang","langSlug":"erlang","code":"-spec min_number_of_frogs(CroakOfFrogs :: unicode:unicode_binary()) -> integer().\nmin_number_of_frogs(CroakOfFrogs) ->\n  ."},{"lang":"Elixir","langSlug":"elixir","code":"defmodule Solution do\n  @spec min_number_of_frogs(croak_of_frogs :: String.t) :: integer\n  def min_number_of_frogs(croak_of_frogs) do\n\n  end\nend"}]}