{"slug":"count-number-of-texts","id":2348,"frontendId":6058,"title":"Count Number of Texts","categoryTitle":"Algorithms","difficulty":1,"starred":false,"locked":false,"likes":6,"dislikes":0,"status":0,"tag":[],"totalAccepted":2973,"totalSubmission":7629,"hints":["For a substring consisting of the same digit, how can we count the number of texts it could have originally represented?","How can dynamic programming help us calculate the required answer?"],"sampleTestCase":"\"22233\"","exampleTestcases":"\"22233\"\n\"222222222222222222222222222222222222\"","content":"<p>Alice is texting Bob using her phone. The <strong>mapping</strong> of digits to letters is shown in the figure below.</p>\n<img alt=\"\" src=\"problem-assets/https:--assets.leetcode.com-uploads-2022-03-15-1200px-telephone-keypad2svg.png\" style=\"width: 200px; height: 162px;\" />\n<p>In order to <strong>add</strong> a letter, Alice has to <strong>press</strong> the key of the corresponding digit <code>i</code> times, where <code>i</code> is the position of the letter in the key.</p>\n\n<ul>\n\t<li>For example, to add the letter <code>&#39;s&#39;</code>, Alice has to press <code>&#39;7&#39;</code> four times. Similarly, to add the letter <code>&#39;k&#39;</code>, Alice has to press <code>&#39;5&#39;</code> twice.</li>\n\t<li>Note that the digits <code>&#39;0&#39;</code> and <code>&#39;1&#39;</code> do not map to any letters, so Alice <strong>does not</strong> use them.</li>\n</ul>\n\n<p>However, due to an error in transmission, Bob did not receive Alice&#39;s text message but received a <strong>string of pressed keys</strong> instead.</p>\n\n<ul>\n\t<li>For example, when Alice sent the message <code>&quot;bob&quot;</code>, Bob received the string <code>&quot;2266622&quot;</code>.</li>\n</ul>\n\n<p>Given a string <code>pressedKeys</code> representing the string received by Bob, return <em>the <strong>total number of possible text messages</strong> Alice could have sent</em>.</p>\n\n<p>Since the answer may be very large, return it <strong>modulo</strong> <code>10<sup>9</sup> + 7</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> pressedKeys = &quot;22233&quot;\n<strong>Output:</strong> 8\n<strong>Explanation:</strong>\nThe possible text messages Alice could have sent are:\n&quot;aaadd&quot;, &quot;abdd&quot;, &quot;badd&quot;, &quot;cdd&quot;, &quot;aaae&quot;, &quot;abe&quot;, &quot;bae&quot;, and &quot;ce&quot;.\nSince there are 8 possible messages, we return 8.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> pressedKeys = &quot;222222222222222222222222222222222222&quot;\n<strong>Output:</strong> 82876089\n<strong>Explanation:</strong>\nThere are 2082876103 possible text messages Alice could have sent.\nSince we need to return the answer modulo 10<sup>9</sup> + 7, we return 2082876103 % (10<sup>9</sup> + 7) = 82876089.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= pressedKeys.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>pressedKeys</code> only consists of digits from <code>&#39;2&#39;</code> - <code>&#39;9&#39;</code>.</li>\n</ul>\n","translatedContent":"<p>Alice 在给 Bob 用手机打字。数字到字母的 <strong>对应</strong>&nbsp;如下图所示。</p>\n\n<p><img alt=\"\" src=\"problem-assets/https:--assets.leetcode.com-uploads-2022-03-15-1200px-telephone-keypad2svg.png\" style=\"width: 200px; height: 162px;\"></p>\n\n<p>为了 <strong>打出</strong>&nbsp;一个字母，Alice 需要 <strong>按</strong>&nbsp;对应字母 <code>i</code>&nbsp;次，<code>i</code>&nbsp;是该字母在这个按键上所处的位置。</p>\n\n<ul>\n\t<li>比方说，为了按出字母&nbsp;<code>'s'</code>&nbsp;，Alice 需要按&nbsp;<code>'7'</code>&nbsp;四次。类似的， Alice 需要按&nbsp;<code>'5'</code>&nbsp;两次得到字母&nbsp;&nbsp;<code>'k'</code>&nbsp;。</li>\n\t<li>注意，数字&nbsp;<code>'0'</code> 和&nbsp;<code>'1'</code>&nbsp;不映射到任何字母，所以&nbsp;Alice <strong>不</strong>&nbsp;使用它们。</li>\n</ul>\n\n<p>但是，由于传输的错误，Bob 没有收到 Alice 打字的字母信息，反而收到了 <strong>按键的字符串信息</strong>&nbsp;。</p>\n\n<ul>\n\t<li>比方说，Alice 发出的信息为&nbsp;<code>\"bob\"</code>&nbsp;，Bob 将收到字符串&nbsp;<code>\"2266622\"</code>&nbsp;。</li>\n</ul>\n\n<p>给你一个字符串&nbsp;<code>pressedKeys</code>&nbsp;，表示 Bob 收到的字符串，请你返回 Alice <strong>总共可能发出多少种文字信息</strong>&nbsp;。</p>\n\n<p>由于答案可能很大，将它对&nbsp;<code>10<sup>9</sup> + 7</code>&nbsp;<strong>取余</strong> 后返回。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><b>输入：</b>pressedKeys = \"22233\"\n<b>输出：</b>8\n<strong>解释：</strong>\nAlice 可能发出的文字信息包括：\n\"aaadd\", \"abdd\", \"badd\", \"cdd\", \"aaae\", \"abe\", \"bae\" 和 \"ce\" 。\n由于总共有 8 种可能的信息，所以我们返回 8 。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><b>输入：</b>pressedKeys = \"222222222222222222222222222222222222\"\n<b>输出：</b>82876089\n<strong>解释：</strong>\n总共有 2082876103 种 Alice 可能发出的文字信息。\n由于我们需要将答案对 10<sup>9</sup> + 7 取余，所以我们返回 2082876103 % (10<sup>9</sup> + 7) = 82876089 。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= pressedKeys.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>pressedKeys</code> 只包含数字&nbsp;<code>'2'</code>&nbsp;到&nbsp;<code>'9'</code>&nbsp;。</li>\n</ul>\n","translatedTitle":"统计打字方案数","codeSnippets":[{"lang":"C++","langSlug":"cpp","code":"class Solution {\npublic:\n    int countTexts(string pressedKeys) {\n        \n    }\n};"},{"lang":"Java","langSlug":"java","code":"class Solution {\n    public int countTexts(String pressedKeys) {\n\n    }\n}"},{"lang":"Python","langSlug":"python","code":"class Solution(object):\n    def countTexts(self, pressedKeys):\n        \"\"\"\n        :type pressedKeys: str\n        :rtype: int\n        \"\"\""},{"lang":"Python3","langSlug":"python3","code":"class Solution:\n    def countTexts(self, pressedKeys: str) -> int:"},{"lang":"C","langSlug":"c","code":"\n\nint countTexts(char * pressedKeys){\n\n}"},{"lang":"C#","langSlug":"csharp","code":"public class Solution {\n    public int CountTexts(string pressedKeys) {\n\n    }\n}"},{"lang":"JavaScript","langSlug":"javascript","code":"/**\n * @param {string} pressedKeys\n * @return {number}\n */\nvar countTexts = function(pressedKeys) {\n\n};"},{"lang":"Ruby","langSlug":"ruby","code":"# @param {String} pressed_keys\n# @return {Integer}\ndef count_texts(pressed_keys)\n\nend"},{"lang":"Swift","langSlug":"swift","code":"class Solution {\n    func countTexts(_ pressedKeys: String) -> Int {\n\n    }\n}"},{"lang":"Go","langSlug":"golang","code":"func countTexts(pressedKeys string) int {\n\n}"},{"lang":"Scala","langSlug":"scala","code":"object Solution {\n    def countTexts(pressedKeys: String): Int = {\n\n    }\n}"},{"lang":"Kotlin","langSlug":"kotlin","code":"class Solution {\n    fun countTexts(pressedKeys: String): Int {\n\n    }\n}"},{"lang":"Rust","langSlug":"rust","code":"impl Solution {\n    pub fn count_texts(pressed_keys: String) -> i32 {\n\n    }\n}"},{"lang":"PHP","langSlug":"php","code":"class Solution {\n\n    /**\n     * @param String $pressedKeys\n     * @return Integer\n     */\n    function countTexts($pressedKeys) {\n\n    }\n}"},{"lang":"TypeScript","langSlug":"typescript","code":"function countTexts(pressedKeys: string): number {\n\n};"},{"lang":"Racket","langSlug":"racket","code":"(define/contract (count-texts pressedKeys)\n  (-> string? exact-integer?)\n\n  )"},{"lang":"Erlang","langSlug":"erlang","code":"-spec count_texts(PressedKeys :: unicode:unicode_binary()) -> integer().\ncount_texts(PressedKeys) ->\n  ."},{"lang":"Elixir","langSlug":"elixir","code":"defmodule Solution do\n  @spec count_texts(pressed_keys :: String.t) :: integer\n  def count_texts(pressed_keys) do\n\n  end\nend"}]}