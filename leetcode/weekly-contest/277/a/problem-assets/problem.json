{"slug":"count-elements-with-strictly-smaller-and-greater-elements","id":2269,"title":"Count Elements With Strictly Smaller and Greater Elements ","categoryTitle":"Algorithms","difficulty":0,"starred":false,"locked":false,"likes":5,"dislikes":0,"status":0,"tag":[{"name":"Array","slug":"array","translatedName":"数组"},{"name":"Sorting","slug":"sorting","translatedName":"排序"}],"totalAccepted":7153,"totalSubmission":12451,"hints":["All the elements in the array should be counted except for the minimum and maximum elements.","If the array has n elements, the answer will be n - count(min(nums)) - count(max(nums))","This formula will not work in case the array has all the elements equal, why?"],"sampleTestCase":"[11,7,2,15]","exampleTestcases":"[11,7,2,15]\n[-3,3,3,90]","content":"<p>Given an integer array <code>nums</code>, return <em>the number of elements that have <strong>both</strong> a strictly smaller and a strictly greater element appear in </em><code>nums</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [11,7,2,15]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The element 7 has the element 2 strictly smaller than it and the element 11 strictly greater than it.\nElement 11 has element 7 strictly smaller than it and element 15 strictly greater than it.\nIn total there are 2 elements having both a strictly smaller and a strictly greater element appear in <code>nums</code>.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [-3,3,3,90]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The element 3 has the element -3 strictly smaller than it and the element 90 strictly greater than it.\nSince there are two elements with the value 3, in total there are 2 elements having both a strictly smaller and a strictly greater element appear in <code>nums</code>.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 100</code></li>\n\t<li><code>-10<sup>5</sup> &lt;= nums[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n","translatedContent":"<p>给你一个整数数组 <code>nums</code> ，统计并返回在 <code>nums</code> 中同时至少具有一个严格较小元素和一个严格较大元素的元素数目。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>nums = [11,7,2,15]\n<strong>输出：</strong>2\n<strong>解释：</strong>元素 7 ：严格较小元素是元素 2 ，严格较大元素是元素 11 。\n元素 11 ：严格较小元素是元素 7 ，严格较大元素是元素 15 。\n总计有 2 个元素都满足在 nums 中同时存在一个严格较小元素和一个严格较大元素。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>nums = [-3,3,3,90]\n<strong>输出：</strong>2\n<strong>解释：</strong>元素 3 ：严格较小元素是元素 -3 ，严格较大元素是元素 90 。\n由于有两个元素的值为 3 ，总计有 2 个元素都满足在 nums 中同时存在一个严格较小元素和一个严格较大元素。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 100</code></li>\n\t<li><code>-10<sup>5</sup> &lt;= nums[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n","translatedTitle":"元素计数","codeSnippets":[{"lang":"C++","langSlug":"cpp","code":"class Solution {\npublic:\n    int countElements(vector<int>& nums) {\n        \n    }\n};"},{"lang":"Java","langSlug":"java","code":"class Solution {\n    public int countElements(int[] nums) {\n\n    }\n}"},{"lang":"Python","langSlug":"python","code":"class Solution(object):\n    def countElements(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\""},{"lang":"Python3","langSlug":"python3","code":"class Solution:\n    def countElements(self, nums: List[int]) -> int:"},{"lang":"C","langSlug":"c","code":"\n\nint countElements(int* nums, int numsSize){\n\n}"},{"lang":"C#","langSlug":"csharp","code":"public class Solution {\n    public int CountElements(int[] nums) {\n\n    }\n}"},{"lang":"JavaScript","langSlug":"javascript","code":"/**\n * @param {number[]} nums\n * @return {number}\n */\nvar countElements = function(nums) {\n\n};"},{"lang":"Ruby","langSlug":"ruby","code":"# @param {Integer[]} nums\n# @return {Integer}\ndef count_elements(nums)\n\nend"},{"lang":"Swift","langSlug":"swift","code":"class Solution {\n    func countElements(_ nums: [Int]) -> Int {\n\n    }\n}"},{"lang":"Go","langSlug":"golang","code":"func countElements(nums []int) int {\n\n}"},{"lang":"Scala","langSlug":"scala","code":"object Solution {\n    def countElements(nums: Array[Int]): Int = {\n\n    }\n}"},{"lang":"Kotlin","langSlug":"kotlin","code":"class Solution {\n    fun countElements(nums: IntArray): Int {\n\n    }\n}"},{"lang":"Rust","langSlug":"rust","code":"impl Solution {\n    pub fn count_elements(nums: Vec<i32>) -> i32 {\n\n    }\n}"},{"lang":"PHP","langSlug":"php","code":"class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function countElements($nums) {\n\n    }\n}"},{"lang":"TypeScript","langSlug":"typescript","code":"function countElements(nums: number[]): number {\n\n};"},{"lang":"Racket","langSlug":"racket","code":"(define/contract (count-elements nums)\n  (-> (listof exact-integer?) exact-integer?)\n\n  )"},{"lang":"Erlang","langSlug":"erlang","code":"-spec count_elements(Nums :: [integer()]) -> integer().\ncount_elements(Nums) ->\n  ."},{"lang":"Elixir","langSlug":"elixir","code":"defmodule Solution do\n  @spec count_elements(nums :: [integer]) :: integer\n  def count_elements(nums) do\n\n  end\nend"}]}