{"slug":"destroying-asteroids","id":2245,"title":"Destroying Asteroids","categoryTitle":"Algorithms","difficulty":1,"starred":false,"locked":false,"likes":6,"dislikes":0,"status":2,"tag":[{"name":"Greedy","slug":"greedy","translatedName":"贪心"},{"name":"Array","slug":"array","translatedName":"数组"},{"name":"Sorting","slug":"sorting","translatedName":"排序"}],"totalAccepted":5872,"totalSubmission":12214,"hints":["Choosing the asteroid to collide with can be done greedily.","If an asteroid will destroy the planet, then every bigger asteroid will also destroy the planet.","You only need to check the smallest asteroid at each collision. If it will destroy the planet, then every other asteroid will also destroy the planet.","Sort the asteroids in non-decreasing order by mass, then greedily try to collide with the asteroids in that order."],"sampleTestCase":"10\n[3,9,19,5,21]","exampleTestcases":"10\n[3,9,19,5,21]\n5\n[4,9,23,4]","content":"<p>You are given an integer <code>mass</code>, which represents the original mass of a planet. You are further given an integer array <code>asteroids</code>, where <code>asteroids[i]</code> is the mass of the <code>i<sup>th</sup></code> asteroid.</p>\n\n<p>You can arrange for the planet to collide with the asteroids in <strong>any arbitrary order</strong>. If the mass of the planet is <b>greater than or equal to</b> the mass of the asteroid, the asteroid is <strong>destroyed</strong> and the planet <strong>gains</strong> the mass of the asteroid. Otherwise, the planet is destroyed.</p>\n\n<p>Return <code>true</code><em> if <strong>all</strong> asteroids can be destroyed. Otherwise, return </em><code>false</code><em>.</em></p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> mass = 10, asteroids = [3,9,19,5,21]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> One way to order the asteroids is [9,19,5,3,21]:\n- The planet collides with the asteroid with a mass of 9. New planet mass: 10 + 9 = 19\n- The planet collides with the asteroid with a mass of 19. New planet mass: 19 + 19 = 38\n- The planet collides with the asteroid with a mass of 5. New planet mass: 38 + 5 = 43\n- The planet collides with the asteroid with a mass of 3. New planet mass: 43 + 3 = 46\n- The planet collides with the asteroid with a mass of 21. New planet mass: 46 + 21 = 67\nAll asteroids are destroyed.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> mass = 5, asteroids = [4,9,23,4]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> \nThe planet cannot ever gain enough mass to destroy the asteroid with a mass of 23.\nAfter the planet destroys the other asteroids, it will have a mass of 5 + 4 + 9 + 4 = 22.\nThis is less than 23, so a collision would not destroy the last asteroid.</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= mass &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= asteroids.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= asteroids[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n","translatedContent":"<p>给你一个整数&nbsp;<code>mass</code>&nbsp;，它表示一颗行星的初始质量。再给你一个整数数组&nbsp;<code>asteroids</code>&nbsp;，其中&nbsp;<code>asteroids[i]</code>&nbsp;是第&nbsp;<code>i</code>&nbsp;颗小行星的质量。</p>\n\n<p>你可以按 <strong>任意顺序</strong>&nbsp;重新安排小行星的顺序，然后让行星跟它们发生碰撞。如果行星碰撞时的质量 <strong>大于等于</strong>&nbsp;小行星的质量，那么小行星被 <strong>摧毁</strong>&nbsp;，并且行星会 <strong>获得</strong>&nbsp;这颗小行星的质量。否则，行星将被摧毁。</p>\n\n<p>如果所有小行星 <strong>都</strong>&nbsp;能被摧毁，请返回 <code>true</code>&nbsp;，否则返回 <code>false</code>&nbsp;。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><b>输入：</b>mass = 10, asteroids = [3,9,19,5,21]\n<b>输出：</b>true\n<b>解释：</b>一种安排小行星的方式为 [9,19,5,3,21] ：\n- 行星与质量为 9 的小行星碰撞。新的行星质量为：10 + 9 = 19\n- 行星与质量为 19 的小行星碰撞。新的行星质量为：19 + 19 = 38\n- 行星与质量为 5 的小行星碰撞。新的行星质量为：38 + 5 = 43\n- 行星与质量为 3 的小行星碰撞。新的行星质量为：43 + 3 = 46\n- 行星与质量为 21 的小行星碰撞。新的行星质量为：46 + 21 = 67\n所有小行星都被摧毁。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><b>输入：</b>mass = 5, asteroids = [4,9,23,4]\n<b>输出：</b>false\n<b>解释：</b>\n行星无论如何没法获得足够质量去摧毁质量为 23 的小行星。\n行星把别的小行星摧毁后，质量为 5 + 4 + 9 + 4 = 22 。\n它比 23 小，所以无法摧毁最后一颗小行星。</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= mass &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= asteroids.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= asteroids[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n","translatedTitle":"摧毁小行星","codeSnippets":[{"lang":"C++","langSlug":"cpp","code":"class Solution {\npublic:\n    bool asteroidsDestroyed(int mass, vector<int>& asteroids) {\n        \n    }\n};"},{"lang":"Java","langSlug":"java","code":"class Solution {\n    public boolean asteroidsDestroyed(int mass, int[] asteroids) {\n\n    }\n}"},{"lang":"Python","langSlug":"python","code":"class Solution(object):\n    def asteroidsDestroyed(self, mass, asteroids):\n        \"\"\"\n        :type mass: int\n        :type asteroids: List[int]\n        :rtype: bool\n        \"\"\""},{"lang":"Python3","langSlug":"python3","code":"class Solution:\n    def asteroidsDestroyed(self, mass: int, asteroids: List[int]) -> bool:"},{"lang":"C","langSlug":"c","code":"\n\nbool asteroidsDestroyed(int mass, int* asteroids, int asteroidsSize){\n\n}"},{"lang":"C#","langSlug":"csharp","code":"public class Solution {\n    public bool AsteroidsDestroyed(int mass, int[] asteroids) {\n\n    }\n}"},{"lang":"JavaScript","langSlug":"javascript","code":"/**\n * @param {number} mass\n * @param {number[]} asteroids\n * @return {boolean}\n */\nvar asteroidsDestroyed = function(mass, asteroids) {\n\n};"},{"lang":"Ruby","langSlug":"ruby","code":"# @param {Integer} mass\n# @param {Integer[]} asteroids\n# @return {Boolean}\ndef asteroids_destroyed(mass, asteroids)\n\nend"},{"lang":"Swift","langSlug":"swift","code":"class Solution {\n    func asteroidsDestroyed(_ mass: Int, _ asteroids: [Int]) -> Bool {\n\n    }\n}"},{"lang":"Go","langSlug":"golang","code":"func asteroidsDestroyed(mass int, asteroids []int) bool {\n\n}"},{"lang":"Scala","langSlug":"scala","code":"object Solution {\n    def asteroidsDestroyed(mass: Int, asteroids: Array[Int]): Boolean = {\n\n    }\n}"},{"lang":"Kotlin","langSlug":"kotlin","code":"class Solution {\n    fun asteroidsDestroyed(mass: Int, asteroids: IntArray): Boolean {\n\n    }\n}"},{"lang":"Rust","langSlug":"rust","code":"impl Solution {\n    pub fn asteroids_destroyed(mass: i32, asteroids: Vec<i32>) -> bool {\n\n    }\n}"},{"lang":"PHP","langSlug":"php","code":"class Solution {\n\n    /**\n     * @param Integer $mass\n     * @param Integer[] $asteroids\n     * @return Boolean\n     */\n    function asteroidsDestroyed($mass, $asteroids) {\n\n    }\n}"},{"lang":"TypeScript","langSlug":"typescript","code":"function asteroidsDestroyed(mass: number, asteroids: number[]): boolean {\n\n};"},{"lang":"Racket","langSlug":"racket","code":"(define/contract (asteroids-destroyed mass asteroids)\n  (-> exact-integer? (listof exact-integer?) boolean?)\n\n  )"},{"lang":"Erlang","langSlug":"erlang","code":"-spec asteroids_destroyed(Mass :: integer(), Asteroids :: [integer()]) -> boolean().\nasteroids_destroyed(Mass, Asteroids) ->\n  ."},{"lang":"Elixir","langSlug":"elixir","code":"defmodule Solution do\n  @spec asteroids_destroyed(mass :: integer, asteroids :: [integer]) :: boolean\n  def asteroids_destroyed(mass, asteroids) do\n\n  end\nend"}]}