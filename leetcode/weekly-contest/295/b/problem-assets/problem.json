{"slug":"apply-discount-to-prices","id":2373,"frontendId":2288,"title":"Apply Discount to Prices","categoryTitle":"Algorithms","difficulty":1,"starred":false,"locked":false,"likes":5,"dislikes":0,"status":2,"tag":[],"totalAccepted":5994,"totalSubmission":20113,"hints":["Extract each word from the sentence and check if it represents a price.","For each price, apply the given discount to it and update it."],"sampleTestCase":"\"there are $1 $2 and 5$ candies in the shop\"\n50","exampleTestcases":"\"there are $1 $2 and 5$ candies in the shop\"\n50\n\"1 2 $3 4 $5 $6 7 8$ $9 $10$\"\n100","content":"<p>A <strong>sentence</strong> is a string of single-space separated words where each word can contain digits, lowercase letters, and the dollar sign <code>&#39;$&#39;</code>. A word represents a <strong>price</strong> if it is a non-negative real number preceded by a dollar sign.</p>\n\n<ul>\n\t<li>For example, <code>&quot;$100&quot;</code>, <code>&quot;$23&quot;</code>, and <code>&quot;$6.75&quot;</code> represent prices while <code>&quot;100&quot;</code>, <code>&quot;$&quot;</code>, and <code>&quot;2$3&quot;</code> do not.</li>\n</ul>\n\n<p>You are given a string <code>sentence</code> representing a sentence and an integer <code>discount</code>. For each word representing a price, apply a discount of <code>discount%</code> on the price and <strong>update</strong> the word in the sentence. All updated prices should be represented with <strong>exactly two</strong> decimal places.</p>\n\n<p>Return <em>a string representing the modified sentence</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> sentence = &quot;there are $1 $2 and 5$ candies in the shop&quot;, discount = 50\n<strong>Output:</strong> &quot;there are $0.50 $1.00 and 5$ candies in the shop&quot;\n<strong>Explanation:</strong> \nThe words which represent prices are &quot;$1&quot; and &quot;$2&quot;. \n- A 50% discount on &quot;$1&quot; yields &quot;$0.50&quot;, so &quot;$1&quot; is replaced by &quot;$0.50&quot;.\n- A 50% discount on &quot;$2&quot; yields &quot;$1&quot;. Since we need to have exactly 2 decimal places after a price, we replace &quot;$2&quot; with &quot;$1.00&quot;.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> sentence = &quot;1 2 $3 4 $5 $6 7 8$ $9 $10$&quot;, discount = 100\n<strong>Output:</strong> &quot;1 2 $0.00 4 $0.00 $0.00 7 8$ $0.00 $10$&quot;\n<strong>Explanation:</strong> \nApplying a 100% discount on any price will result in 0.\nThe words representing prices are &quot;$3&quot;, &quot;$5&quot;, &quot;$6&quot;, and &quot;$9&quot;.\nEach of them is replaced by &quot;$0.00&quot;.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= sentence.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>sentence</code> consists of lowercase English letters, digits, <code>&#39; &#39;</code>, and <code>&#39;$&#39;</code>.</li>\n\t<li><code>sentence</code> does not have leading or trailing spaces.</li>\n\t<li>All words in <code>sentence</code> are separated by a single space.</li>\n\t<li>All prices will be <strong>positive</strong> integers without leading zeros.</li>\n\t<li>All prices will have <strong>at most</strong> <code>10</code> digits.</li>\n\t<li><code>0 &lt;= discount &lt;= 100</code></li>\n</ul>\n","translatedContent":"<p><strong>句子</strong> 是由若干个单词组成的字符串，单词之间用单个空格分隔，其中每个单词可以包含数字、小写字母、和美元符号 <code>'$'</code> 。如果单词的形式为美元符号后跟着一个非负实数，那么这个单词就表示一个价格。</p>\n\n<ul>\n\t<li>例如 <code>\"$100\"</code>、<code>\"$23\"</code> 和 <code>\"$6.75\"</code> 表示价格，而 <code>\"100\"</code>、<code>\"$\"</code> 和 <code>\"2$3\"</code> 不是。</li>\n</ul>\n\n<p><strong>注意：</strong>本题输入中的价格均为整数。</p>\n\n<p>给你一个字符串 <code>sentence</code>&nbsp; 和一个整数 <code>discount</code> 。对于每个表示价格的单词，都在价格的基础上减免 <code>discount%</code> ，并 <strong>更新</strong> 该单词到句子中。所有更新后的价格应该表示为一个 <strong>恰好保留小数点后两位</strong> 的数字。</p>\n\n<p>返回表示修改后句子的字符串。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>sentence = \"there are $1 $2 and 5$ candies in the shop\", discount = 50\n<strong>输出：</strong>\"there are $0.50 $1.00 and 5$ candies in the shop\"\n<strong>解释：</strong>\n表示价格的单词是 \"$1\" 和 \"$2\" 。 \n- \"$1\" 减免 50% 为 \"$0.50\" ，所以 \"$1\" 替换为 \"$0.50\" 。\n- \"$2\" 减免 50% 为 \"$1\" ，所以 \"$1\" 替换为 \"$1.00\" 。</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>sentence = \"1 2 $3 4 $5 $6 7 8$ $9 $10$\", discount = 100\n<strong>输出：</strong>\"1 2 $0.00 4 $0.00 $0.00 7 8$ $0.00 $10$\"\n<strong>解释：</strong>\n任何价格减免 100% 都会得到 0 。\n表示价格的单词分别是 \"$3\"、\"$5\"、\"$6\" 和 \"$9\"。\n每个单词都替换为 \"$0.00\"。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= sentence.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>sentence</code> 由小写英文字母、数字、<code>' '</code> 和&nbsp;<code>'$'</code> 组成</li>\n\t<li><code>sentence</code> 不含前导和尾随空格</li>\n\t<li><code>sentence</code> 的所有单词都用单个空格分隔</li>\n\t<li>所有价格都是 <strong>正</strong> 整数且不含前导零</li>\n\t<li>所有价格 <strong>最多</strong> 为&nbsp; <code>10</code> 位数字</li>\n\t<li><code>0 &lt;= discount &lt;= 100</code></li>\n</ul>\n","translatedTitle":"价格减免","codeSnippets":[{"lang":"C++","langSlug":"cpp","code":"class Solution {\npublic:\n    string discountPrices(string sentence, int discount) {\n        \n    }\n};"},{"lang":"Java","langSlug":"java","code":"class Solution {\n    public String discountPrices(String sentence, int discount) {\n\n    }\n}"},{"lang":"Python","langSlug":"python","code":"class Solution(object):\n    def discountPrices(self, sentence, discount):\n        \"\"\"\n        :type sentence: str\n        :type discount: int\n        :rtype: str\n        \"\"\""},{"lang":"Python3","langSlug":"python3","code":"class Solution:\n    def discountPrices(self, sentence: str, discount: int) -> str:"},{"lang":"C","langSlug":"c","code":"\n\nchar * discountPrices(char * sentence, int discount){\n\n}"},{"lang":"C#","langSlug":"csharp","code":"public class Solution {\n    public string DiscountPrices(string sentence, int discount) {\n\n    }\n}"},{"lang":"JavaScript","langSlug":"javascript","code":"/**\n * @param {string} sentence\n * @param {number} discount\n * @return {string}\n */\nvar discountPrices = function(sentence, discount) {\n\n};"},{"lang":"Ruby","langSlug":"ruby","code":"# @param {String} sentence\n# @param {Integer} discount\n# @return {String}\ndef discount_prices(sentence, discount)\n\nend"},{"lang":"Swift","langSlug":"swift","code":"class Solution {\n    func discountPrices(_ sentence: String, _ discount: Int) -> String {\n\n    }\n}"},{"lang":"Go","langSlug":"golang","code":"func discountPrices(sentence string, discount int) string {\n\n}"},{"lang":"Scala","langSlug":"scala","code":"object Solution {\n    def discountPrices(sentence: String, discount: Int): String = {\n\n    }\n}"},{"lang":"Kotlin","langSlug":"kotlin","code":"class Solution {\n    fun discountPrices(sentence: String, discount: Int): String {\n\n    }\n}"},{"lang":"Rust","langSlug":"rust","code":"impl Solution {\n    pub fn discount_prices(sentence: String, discount: i32) -> String {\n\n    }\n}"},{"lang":"PHP","langSlug":"php","code":"class Solution {\n\n    /**\n     * @param String $sentence\n     * @param Integer $discount\n     * @return String\n     */\n    function discountPrices($sentence, $discount) {\n\n    }\n}"},{"lang":"TypeScript","langSlug":"typescript","code":"function discountPrices(sentence: string, discount: number): string {\n\n};"},{"lang":"Racket","langSlug":"racket","code":"(define/contract (discount-prices sentence discount)\n  (-> string? exact-integer? string?)\n\n  )"},{"lang":"Erlang","langSlug":"erlang","code":"-spec discount_prices(Sentence :: unicode:unicode_binary(), Discount :: integer()) -> unicode:unicode_binary().\ndiscount_prices(Sentence, Discount) ->\n  ."},{"lang":"Elixir","langSlug":"elixir","code":"defmodule Solution do\n  @spec discount_prices(sentence :: String.t, discount :: integer) :: String.t\n  def discount_prices(sentence, discount) do\n\n  end\nend"}]}