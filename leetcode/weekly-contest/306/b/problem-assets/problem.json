{"slug":"node-with-highest-edge-score","id":2455,"frontendId":6149,"title":"Node With Highest Edge Score","categoryTitle":"Algorithms","difficulty":1,"starred":false,"locked":false,"likes":0,"dislikes":0,"status":2,"tag":[],"totalAccepted":5193,"totalSubmission":13756,"hints":["Create an array arr where arr[i] is the edge score for node i.","How does the edge score for node edges[i] change? It increases by i.","The edge score may not fit within a standard 32-bit integer."],"sampleTestCase":"[1,0,0,0,0,7,7,5]","exampleTestcases":"[1,0,0,0,0,7,7,5]\n[2,0,0,2]","content":"<p>You are given a directed graph with <code>n</code> nodes labeled from <code>0</code> to <code>n - 1</code>, where each node has <strong>exactly one</strong> outgoing edge.</p>\n\n<p>The graph is represented by a given <strong>0-indexed</strong> integer array <code>edges</code> of length <code>n</code>, where <code>edges[i]</code> indicates that there is a <strong>directed</strong> edge from node <code>i</code> to node <code>edges[i]</code>.</p>\n\n<p>The <strong>edge score</strong> of a node <code>i</code> is defined as the sum of the <strong>labels</strong> of all the nodes that have an edge pointing to <code>i</code>.</p>\n\n<p>Return <em>the node with the highest <strong>edge score</strong></em>. If multiple nodes have the same <strong>edge score</strong>, return the node with the <strong>smallest</strong> index.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img src=\"problem-assets/https:--assets.leetcode.com-uploads-2022-06-20-image-20220620195403-1.png\" style=\"width: 450px; height: 260px;\" />\n<pre>\n<strong>Input:</strong> edges = [1,0,0,0,0,7,7,5]\n<strong>Output:</strong> 7\n<strong>Explanation:</strong>\n- The nodes 1, 2, 3 and 4 have an edge pointing to node 0. The edge score of node 0 is 1 + 2 + 3 + 4 = 10.\n- The node 0 has an edge pointing to node 1. The edge score of node 1 is 0.\n- The node 7 has an edge pointing to node 5. The edge score of node 5 is 7.\n- The nodes 5 and 6 have an edge pointing to node 7. The edge score of node 7 is 5 + 6 = 11.\nNode 7 has the highest edge score so return 7.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n<img src=\"problem-assets/https:--assets.leetcode.com-uploads-2022-06-20-image-20220620200212-3.png\" style=\"width: 150px; height: 155px;\" />\n<pre>\n<strong>Input:</strong> edges = [2,0,0,2]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong>\n- The nodes 1 and 2 have an edge pointing to node 0. The edge score of node 0 is 1 + 2 = 3.\n- The nodes 0 and 3 have an edge pointing to node 2. The edge score of node 2 is 0 + 3 = 3.\nNodes 0 and 2 both have an edge score of 3. Since node 0 has a smaller index, we return 0.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == edges.length</code></li>\n\t<li><code>2 &lt;= n &lt;= 10<sup>5</sup></code></li>\n\t<li><code>0 &lt;= edges[i] &lt; n</code></li>\n\t<li><code>edges[i] != i</code></li>\n</ul>\n","translatedContent":"<p>给你一个有向图，图中有 <code>n</code> 个节点，节点编号从 <code>0</code> 到 <code>n - 1</code> ，其中每个节点都 <strong>恰有一条</strong> 出边。</p>\n\n<p>图由一个下标从 <strong>0</strong> 开始、长度为 <code>n</code> 的整数数组 <code>edges</code> 表示，其中 <code>edges[i]</code> 表示存在一条从节点 <code>i</code> 到节点 <code>edges[i]</code> 的 <strong>有向</strong> 边。</p>\n\n<p>节点 <code>i</code> 的 <strong>边积分</strong> 定义为：所有存在一条指向节点 <code>i</code> 的边的节点的 <strong>编号</strong> 总和。</p>\n\n<p>返回 <strong>边积分</strong> 最高的节点。如果多个节点的 <strong>边积分</strong> 相同，返回编号 <strong>最小</strong> 的那个。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n<img src=\"problem-assets/https:--assets.leetcode.com-uploads-2022-06-20-image-20220620195403-1.png\" style=\"width: 450px; height: 260px;\">\n<pre><strong>输入：</strong>edges = [1,0,0,0,0,7,7,5]\n<strong>输出：</strong>7\n<strong>解释：</strong>\n- 节点 1、2、3 和 4 都有指向节点 0 的边，节点 0 的边积分等于 1 + 2 + 3 + 4 = 10 。\n- 节点 0 有一条指向节点 1 的边，节点 1 的边积分等于 0 。\n- 节点 7 有一条指向节点 5 的边，节点 5 的边积分等于 7 。\n- 节点 5 和 6 都有指向节点 7 的边，节点 7 的边积分等于 5 + 6 = 11 。\n节点 7 的边积分最高，所以返回 7 。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n<img src=\"problem-assets/https:--assets.leetcode.com-uploads-2022-06-20-image-20220620200212-3.png\" style=\"width: 150px; height: 155px;\">\n<pre><strong>输入：</strong>edges = [2,0,0,2]\n<strong>输出：</strong>0\n<strong>解释：\n</strong>- 节点 1 和 2 都有指向节点 0 的边，节点 0 的边积分等于 1 + 2 = 3 。\n- 节点 0 和 3 都有指向节点 2 的边，节点 2 的边积分等于 0 + 3 = 3 。\n节点 0 和 2 的边积分都是 3 。由于节点 0 的编号更小，返回 0 。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>n == edges.length</code></li>\n\t<li><code>2 &lt;= n &lt;= 10<sup>5</sup></code></li>\n\t<li><code>0 &lt;= edges[i] &lt; n</code></li>\n\t<li><code>edges[i] != i</code></li>\n</ul>\n","translatedTitle":"边积分最高的节点","codeSnippets":[{"lang":"C++","langSlug":"cpp","code":"class Solution {\npublic:\n    int edgeScore(vector<int>& edges) {\n        \n    }\n};"},{"lang":"Java","langSlug":"java","code":"class Solution {\n    public int edgeScore(int[] edges) {\n\n    }\n}"},{"lang":"Python","langSlug":"python","code":"class Solution(object):\n    def edgeScore(self, edges):\n        \"\"\"\n        :type edges: List[int]\n        :rtype: int\n        \"\"\""},{"lang":"Python3","langSlug":"python3","code":"class Solution:\n    def edgeScore(self, edges: List[int]) -> int:"},{"lang":"C","langSlug":"c","code":"\n\nint edgeScore(int* edges, int edgesSize){\n\n}"},{"lang":"C#","langSlug":"csharp","code":"public class Solution {\n    public int EdgeScore(int[] edges) {\n\n    }\n}"},{"lang":"JavaScript","langSlug":"javascript","code":"/**\n * @param {number[]} edges\n * @return {number}\n */\nvar edgeScore = function(edges) {\n\n};"},{"lang":"Ruby","langSlug":"ruby","code":"# @param {Integer[]} edges\n# @return {Integer}\ndef edge_score(edges)\n\nend"},{"lang":"Swift","langSlug":"swift","code":"class Solution {\n    func edgeScore(_ edges: [Int]) -> Int {\n\n    }\n}"},{"lang":"Go","langSlug":"golang","code":"func edgeScore(edges []int) int {\n\n}"},{"lang":"Scala","langSlug":"scala","code":"object Solution {\n    def edgeScore(edges: Array[Int]): Int = {\n\n    }\n}"},{"lang":"Kotlin","langSlug":"kotlin","code":"class Solution {\n    fun edgeScore(edges: IntArray): Int {\n\n    }\n}"},{"lang":"Rust","langSlug":"rust","code":"impl Solution {\n    pub fn edge_score(edges: Vec<i32>) -> i32 {\n\n    }\n}"},{"lang":"PHP","langSlug":"php","code":"class Solution {\n\n    /**\n     * @param Integer[] $edges\n     * @return Integer\n     */\n    function edgeScore($edges) {\n\n    }\n}"},{"lang":"TypeScript","langSlug":"typescript","code":"function edgeScore(edges: number[]): number {\n\n};"},{"lang":"Racket","langSlug":"racket","code":"(define/contract (edge-score edges)\n  (-> (listof exact-integer?) exact-integer?)\n\n  )"},{"lang":"Erlang","langSlug":"erlang","code":"-spec edge_score(Edges :: [integer()]) -> integer().\nedge_score(Edges) ->\n  ."},{"lang":"Elixir","langSlug":"elixir","code":"defmodule Solution do\n  @spec edge_score(edges :: [integer]) :: integer\n  def edge_score(edges) do\n\n  end\nend"},{"lang":"Dart","langSlug":"dart","code":"class Solution {\n  int edgeScore(List<int> edges) {\n\n  }\n}"}]}